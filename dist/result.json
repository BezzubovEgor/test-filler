[
  {
    "question": "Что заключается между /* и */?",
    "number": 1,
    "options": [
      "Комментарии",
      "код программы",
      "библиотечные функции"
    ],
    "answers": [
      "Комментарии"
    ]
  },
  {
    "question": "Какой максимальный размер исполняемого .com-файла?",
    "number": 2,
    "options": [
      "64Кб.",
      "Зависит от аппаратной платформы",
      "640Кб",
      "16Мб"
    ],
    "answers": [
      "64Кб."
    ]
  },
  {
    "question": "Можно ли с помощью #define описывать макросы?",
    "number": 3,
    "options": [
      "Да, любой длины",
      "Нет",
      "Только в C++",
      "Да, но только длиной в одну команду"
    ],
    "answers": [
      "Да, любой длины"
    ]
  },
  {
    "question": "Для чего в программе C++ используется директива #include?",
    "number": 4,
    "options": [
      "для подключения заголовочных файлов системы",
      "для формирования потоков вывода",
      "для объявления переменных"
    ],
    "answers": [
      "для подключения заголовочных файлов системы"
    ]
  },
  {
    "question": "Правильность вызова функций производится компилятором с помощью...",
    "number": 5,
    "options": [
      "данных заголовочных файлов",
      "параметров первичной инициализации системы",
      "параметров первичной компиляции системы",
      "шаблонов потоковых данных"
    ],
    "answers": [
      "данных заголовочных файлов"
    ]
  },
  {
    "question": "В чем заключается суть компоновки программы?",
    "number": 6,
    "options": [
      "в объединении нескольких объектных модулей программы в один исполняемый",
      "в переводе текстового файла в объектный модуль",
      "в подготовке программы к выполнению",
      "в проверке ошибок и выполнении программы"
    ],
    "answers": [
      "в объединении нескольких объектных модулей программы в один исполняемый"
    ]
  },
  {
    "question": "Какую строку должен содержать исходный файл, который обращается к функции из стандартной библиотеки?",
    "number": 7,
    "options": [
      "#INCLUDE <stdio.h>",
      "INCLUDE stdio.h",
      "#DEFINE lib <stdio.h>",
      "INCLUDE <stdio.h>"
    ],
    "answers": [
      "#INCLUDE <stdio.h>"
    ]
  },
  {
    "question": "Что такое #include?",
    "number": 8,
    "options": [
      "Директива препроцессора",
      "Директива процессора",
      "Директива компилятора",
      "Оператор"
    ],
    "answers": [
      "Директива препроцессора"
    ]
  },
  {
    "question": "Для обнаружения синтаксических ошибок используется...",
    "number": 9,
    "options": [
      "компилятор",
      "модулятор",
      "компаратор",
      "деструктор",
      "конструктор"
    ],
    "answers": [
      "компилятор"
    ]
  },
  {
    "question": "Для устранения синтаксических ошибок используется...",
    "number": 10,
    "options": [
      "текстовый редактор",
      "компилятор",
      "модулятор",
      "деструктор",
      "конструктор"
    ],
    "answers": [
      "текстовый редактор"
    ]
  },
  {
    "question": "Максимальный объем массива при работе в Borland C++ под управлением MS-DOS составляет...",
    "number": 11,
    "options": [
      "64 Кбайт",
      "16 Кбайт",
      "128 Кбайт",
      "256 Кбайт"
    ],
    "answers": [
      "64 Кбайт"
    ]
  },
  {
    "question": "Каково преимущество использования ключевого слова const вместо директивы #define?",
    "number": 12,
    "options": [
      "константа, определенная с помощью const, имеет тип, и компилятор может проследить за ее",
      "к константе, определенной с помощью const, можно применить операции инкремента и декремента",
      "константа, определенная с помощью const, доступна в других модулях программы"
    ],
    "answers": [
      "константа, определенная с помощью const, имеет тип, и компилятор может проследить за ее"
    ]
  },
  {
    "question": "Данные, помещенные в стек первыми...",
    "number": 13,
    "options": [
      "будут извлечены из стека последними",
      "не имеют индексного номера",
      "имеют индекс, равный 0",
      "будут первыми извлечены из стека"
    ],
    "answers": [
      "будут извлечены из стека последними"
    ]
  },
  {
    "question": "Чем стек FIFO отличается от LIFO?",
    "number": 14,
    "options": [
      "Типом очереди.",
      "Размером",
      "Скоростью работы",
      "Типом хранимых данных"
    ],
    "answers": [
      "Типом очереди."
    ]
  },
  {
    "question": "Модуль программы на С правильно называется:",
    "number": 15,
    "options": [
      "Модуль",
      "Библиотека",
      "Функция",
      "Процедура Функции ввода и вывода"
    ],
    "answers": [
      "Модуль"
    ]
  },
  {
    "question": "Спецификация %5f определяет:",
    "number": 16,
    "options": [
      "Печать вещественного числа в поле шириной не более пяти позиций",
      "Печать целого числа в поле шириной не более пяти позиций",
      "Печать вещественного числа в поле шириной не менее пяти позиций",
      "Печать 5 букв f"
    ],
    "answers": [
      "Печать вещественного числа в поле шириной не более пяти позиций"
    ]
  },
  {
    "question": "Какая функция позволяет реализовать механизм записи по одному символу в терминал?",
    "number": 17,
    "options": [
      "putchar",
      "getchar",
      "getc",
      "printchar"
    ],
    "answers": [
      "putchar"
    ]
  },
  {
    "question": "Что производит строка программы: cout << a=;?",
    "number": 18,
    "options": [
      "выводит символы на экран",
      "заносит значения в память",
      "формирует системный шаблон",
      "удаляет символ с экрана"
    ],
    "answers": [
      "выводит символы на экран"
    ]
  },
  {
    "question": "Каким образом организуется ожидание дейтвий пользователя, пока пользователь не наберет на клавиатуре какое-либо число и нажмет клавишу Enter?",
    "number": 19,
    "options": [
      "50%*cin >> a;",
      "50%*scanf(%d, &a);",
      "-100%cout >> a;",
      "-100%getchio >> a;",
      "-100%cout<<a;"
    ],
    "answers": [
      "50%*cin >> a;",
      "50%*scanf(%d, &a);"
    ]
  },
  {
    "question": "Что означает строка цифр до точки между % и символом преобразования в функции вывода printf?",
    "number": 20,
    "options": [
      "максимальная ширина поля",
      "минимальная ширина поля",
      "вывод цифр и %",
      "вывод количества %, равного количеству цифр"
    ],
    "answers": [
      "максимальная ширина поля"
    ]
  },
  {
    "question": "С помощью какой командной строки можно организовать запись стандартного вывода в файл outfile, а не на терминал?",
    "number": 21,
    "options": [
      "prog<outfile",
      "outfile \\! prog",
      "prog \\! outfile",
      "prog>outfile",
      ""
    ],
    "answers": [
      "prog<outfile"
    ]
  },
  {
    "question": "Что означает символ преобразования c в функции вывода printf?",
    "number": 22,
    "options": [
      "аргумент рассматривается как отдельный символ",
      "аргумент преобразуется в беззнаковую десятичную форму",
      "аргумент преобразуется к десятичному виду",
      "аргумент преобразуется в беззнаковую шестнадцатеричную форму (без лидирующих 0x)",
      "аргумент является строкой"
    ],
    "answers": [
      "аргумент рассматривается как отдельный символ"
    ]
  },
  {
    "question": "Что означает символ преобразования u в функции вывода print?",
    "number": 23,
    "options": [
      "аргумент преобразуется в беззнаковую десятичную форму",
      "аргумент рассматривается как отдельный символ",
      "аргумент преобразуется к десятичному виду",
      "аргумент преобразуется в беззнаковую шестнадцатеричную форму (без лидирующих 0x)",
      "аргумент является строкой"
    ],
    "answers": [
      "аргумент преобразуется в беззнаковую десятичную форму"
    ]
  },
  {
    "question": "С помощью какой функции может быть организована остановка программы до нажатия какой-либо клавиши?",
    "number": 24,
    "options": [
      "getch();",
      "wait();",
      "stop();",
      "break();"
    ],
    "answers": [
      "getch();"
    ]
  },
  {
    "question": "Функция ввода имеет вид:",
    "number": 25,
    "options": [
      "cin >>",
      "io >>",
      "bin >>",
      "con>>"
    ],
    "answers": [
      "cin >>"
    ]
  },
  {
    "question": "Описание функции getch() находится в заголовочном файле...",
    "number": 26,
    "options": [
      "conio.h",
      "iostream.h",
      "getio.h",
      "stdio.h"
    ],
    "answers": [
      "conio.h"
    ]
  },
  {
    "question": "Какая из этих функция предназначена для вывода в файл?",
    "number": 27,
    "options": [
      "fwrite",
      "fprint",
      "scanf",
      "fscanf"
    ],
    "answers": [
      "fwrite"
    ]
  },
  {
    "question": "Какая модель памяти и разрядность процессора использовались, если printf (%p, &a) вывело 0xffff74df:cd88e5c0?",
    "number": 28,
    "options": [
      "Segmented, 32-bit.",
      "Flat, 64-bit.",
      "Flat, 32-bit.",
      "Paged, 64-bit.",
      "Paged, 32-bit.",
      "Segmented, 64-bit."
    ],
    "answers": [
      "Segmented, 32-bit."
    ]
  },
  {
    "question": "Значение кода преобразования %lx приводит  к выводу аргумента типа long в:",
    "number": 29,
    "options": [
      "в виде шестнадцатеричного числа",
      "в виде восьмеричного числа",
      "в виде десятеричного числа",
      "в виде двоичного числа"
    ],
    "answers": [
      "в виде шестнадцатеричного числа"
    ]
  },
  {
    "question": "Что означает знак минус между % и символом преобразования в функции вывода printf?",
    "number": 30,
    "options": [
      "*выравнивание преобразованного аргумента по левому краю его поля",
      "выравнивание преобразованного аргумента по правому краю его поля",
      "выравнивание преобразованного аргумента по центру его поля"
    ],
    "answers": [
      "*выравнивание преобразованного аргумента по левому краю его поля"
    ]
  },
  {
    "question": "Какая из этих управляющих последовательностей служит для перевода курсора в начало следующей строки",
    "number": 31,
    "options": [
      "\\n",
      "\\e",
      "\\f",
      "\\r",
      ""
    ],
    "answers": [
      "\\n"
    ]
  },
  {
    "question": "sprintf(NAME, TEMP%d, N); Что произойдет в результате выполнения этого кода?",
    "number": 32,
    "options": [
      "создание в NAME строки вида TEMPNNN, где NNN - значение N",
      "создание в NAME строки вида NNN, где NNN - значение N",
      "компилятор выдаст ошибку"
    ],
    "answers": [
      "создание в NAME строки вида TEMPNNN, где NNN - значение N"
    ]
  },
  {
    "question": "При вводе данных с помощью функции scanf используется",
    "number": 33,
    "options": [
      "форматная строка",
      "модульная строка",
      "контекстная строка",
      "объектная строка"
    ],
    "answers": [
      "форматная строка"
    ]
  },
  {
    "question": "Форматный ввод не позволяет вводить числовые значения в переменные типа",
    "number": 34,
    "options": [
      "*int",
      "long",
      "char",
      "double"
    ],
    "answers": [
      "*int"
    ]
  },
  {
    "question": "?Системы программирования для DOS ориентированы на однобайтовую кодировку символьных данных на базе кодовых страниц",
    "number": 35,
    "options": [
      "ASCII",
      "Unicode",
      "MAC",
      "CodBC"
    ],
    "answers": [
      "ASCII"
    ]
  },
  {
    "question": "Значения символьных данных эквивалентны",
    "number": 36,
    "options": [
      "однобайтовым целым числам",
      "вещественным числам",
      "массивам числовых данных",
      "массивам строковых данных"
    ],
    "answers": [
      "однобайтовым целым числам"
    ]
  },
  {
    "question": "Какую спецификацию имеет функция printf для вещественных чисел?",
    "number": 37,
    "options": [
      "%f",
      "%d",
      "%s",
      "%r"
    ],
    "answers": [
      "%f"
    ]
  },
  {
    "question": "Первый элемент строки это:",
    "number": 38,
    "options": [
      "первый символ строки",
      "имя строки",
      "длина строки",
      "имя массива, содержащего строку"
    ],
    "answers": [
      "первый символ строки"
    ]
  },
  {
    "question": "Выберите выражение, которое выводит адрес скалярной переменной testvar:",
    "number": 39,
    "options": [
      "50%cout <<&testvar;",
      "50%printf (%p, &testvar)",
      "-100%cout <<testvar;",
      "-100%cout <<&testvar;",
      "-100%cout <<testvar;"
    ],
    "answers": [
      "50%cout <<&testvar;",
      "50%printf (%p, &testvar)"
    ]
  },
  {
    "question": "Вы можете считывать ввод, который содержит несколько слов, используя:",
    "number": 40,
    "options": [
      "gets()",
      "getc()",
      "getch()",
      "getchar()"
    ],
    "answers": [
      "gets()"
    ]
  },
  {
    "question": "Стандартная функция scanf:",
    "number": 41,
    "options": [
      "Считывает значение переменной;",
      "Выводит переменную;",
      "Инициализирует переменную;",
      "Освобождает переменную;",
      "Связывает значение переменной."
    ],
    "answers": [
      "Считывает значение переменной;"
    ]
  },
  {
    "question": "Спецификация преобразования определяется при помощи символа:",
    "number": 42,
    "options": [
      "%;",
      "&;",
      "^;",
      "$;",
      "=."
    ],
    "answers": [
      "%;"
    ]
  },
  {
    "question": "Фрагмент кода: printf(“This\\nis\\na\\nC\\nprogram.\\n”);",
    "number": 43,
    "options": [
      "Напечатает сообщение This is a C program. так, чтобы каждое слово располагалось на новой строке;",
      "Напечатает сообщение This\\nis\\na\\nC\\nprogram.\\n в одну строку;",
      "Напечатает сообщение This is a C program. в две строки, причём первая закончится на C;",
      "Напечатает сообщение This is a C program. так, чтобы каждое слово располагалось в новой позиции",
      "Напечатает сообщение This is a C program. в одну строку."
    ],
    "answers": [
      "Напечатает сообщение This is a C program. так, чтобы каждое слово располагалось на новой строке;"
    ]
  },
  {
    "question": "Фрагмент кода: printf(“This\\tis\\ta\\tC\\tprogram.\\n”);",
    "number": 44,
    "options": [
      "Напечатает сообщение This is a C program. так, чтобы каждое слово располагалось в новой позиции",
      "Напечатает сообщение This\\nis\\na\\nC\\nprogram.\\n в одну строку;",
      "Напечатает сообщение This is a C program. в две строки, причём первая закончится на C;",
      "Напечатает сообщение This is a C program. так, чтобы каждое слово располагалось на новой строке;",
      "Напечатает сообщение This is a C program. в одну строку. Типы, операции и выражения"
    ],
    "answers": [
      "Напечатает сообщение This is a C program. так, чтобы каждое слово располагалось в новой позиции"
    ]
  },
  {
    "question": "typedef int (*PFI) (); Что произойдет в результате выполнения этого кода?",
    "number": 45,
    "options": [
      "создает тип PFI дляуказателя функции, возвращающей значение типа int",
      "создает тип int дляуказателя функции, возвращающей значение типа PFI",
      "компилятор выдаст ошибку"
    ],
    "answers": [
      "создает тип PFI дляуказателя функции, возвращающей значение типа int"
    ]
  },
  {
    "question": "С помощью какого оператора в языке C можно вводить новые типы данных?",
    "number": 46,
    "options": [
      "typedef",
      "type",
      "type def"
    ],
    "answers": [
      "typedef"
    ]
  },
  {
    "question": "Что будет результатом выражения: sizeof(OBJECT)?",
    "number": 47,
    "options": [
      "целое, равное размеру указанного объекта в байтах",
      "целое, равное размеру указанного объекта в битах",
      "вещественное число, равное размеру указанного объекта в байтах",
      "адрес OBJECT"
    ],
    "answers": [
      "целое, равное размеру указанного объекта в байтах"
    ]
  },
  {
    "question": "Какое описание переменной необходимо использовать чтобы она могла использоваться в файле2, если она определена в файле1?",
    "number": 48,
    "options": [
      "extern",
      "global",
      "main"
    ],
    "answers": [
      "extern"
    ]
  },
  {
    "question": "Какой тип данных в С из нижеперечисленных имеет диапазон значений от 0 до 255?",
    "number": 49,
    "options": [
      "unsigned char",
      "char",
      "unsigned short",
      "short"
    ],
    "answers": [
      "unsigned char"
    ]
  },
  {
    "question": "Укажите объявления переменных целого типа:",
    "number": 50,
    "options": [
      "long l;",
      "int i;",
      "float f;",
      "double d;"
    ],
    "answers": [
      "long l;",
      "int i;"
    ]
  },
  {
    "question": "Что обозначает применение long перед типом числовых данных:",
    "number": 51,
    "options": [
      "проводится удвоение размера типа",
      "Производится уменьшение размера типа в два раза",
      "Тип приводится к float"
    ],
    "answers": [
      "проводится удвоение размера типа"
    ]
  },
  {
    "question": "?Какая строка введет целое число и число с дробной частью?",
    "number": 52,
    "options": [
      "scanf(%d %f,&a,&b)",
      "scanf(%cel %drob,&a,&b)",
      "scanf(Введите целое и дробное число %d %f,a,b)",
      "scanf(%c %d,&c,%d)"
    ],
    "answers": [
      "scanf(%d %f,&a,&b)"
    ]
  },
  {
    "question": "Что в языке С означает строка: void*t;?",
    "number": 53,
    "options": [
      "Переменная t - указатель на тип void",
      "Указатель t умножен на тип void",
      "Константа t - указател  на тип void",
      "указатель t инициализирует тип void",
      "Эта строка не имеет смысла"
    ],
    "answers": [
      "Переменная t - указатель на тип void"
    ]
  },
  {
    "question": "В чем разница между char, unsigned char, signed char?",
    "number": 54,
    "options": [
      "char - знак определяется установкой по умолчанию, unsigned char и signed char - задают знак явно.",
      "Модификатор signed не влияет на работу",
      "Модификатор unsigned не влияет на работу",
      "Модификатор signed не существует для типа char.",
      "Нет разницы"
    ],
    "answers": [
      "char - знак определяется установкой по умолчанию, unsigned char и signed char - задают знак явно."
    ]
  },
  {
    "question": "Что в языке C называется указателем?",
    "number": 55,
    "options": [
      "Переменная, содержащая адрес другой переменной",
      "Определитель сегмента стека в оперативной памяти",
      "Номер регистра данных",
      "Номер ячейки оперативной памяти",
      "Метка, определяющая передачу управления"
    ],
    "answers": [
      "Переменная, содержащая адрес другой переменной"
    ]
  },
  {
    "question": "В каком из перечисленных мест объявляются локальные переменные?",
    "number": 56,
    "options": [
      "В любом месте локальной функции",
      "В файлах с расширением .h",
      "Только перед телом функции main",
      "В любом месте программы",
      "В объявлении прототипа функции"
    ],
    "answers": [
      "В любом месте локальной функции"
    ]
  },
  {
    "question": "В каком из вариантов объявляется переменная целого типа, а ее адрес сохраняется в другой?",
    "number": 57,
    "options": [
      "int a;int *b;b=&a",
      "int &a;int *b;a=b",
      "int *a;int b;b=*a",
      "int &a;int &b;b=&a",
      "int a,int b,b=a"
    ],
    "answers": [
      "int a;int *b;b=&a"
    ]
  },
  {
    "question": "В языке Си указателем называется:",
    "number": 58,
    "options": [
      "Переменная, содержащая адрес другой переменной",
      "Система помощи пользователя",
      "Определитель сегмента стека в оперативной памяти",
      "Номер ячейки оперативной памяти",
      "Метка, опеределяющая передачу управления"
    ],
    "answers": [
      "Переменная, содержащая адрес другой переменной"
    ]
  },
  {
    "question": "В каком порядке будут выполнятся операции (),+,?,&&,^,%",
    "number": 59,
    "options": [
      "(),%,+,^,?",
      "(),?,^,%,&&,+",
      "?,(),+,&&,%,^",
      "^,&&,(),%,+,?",
      "(),+,&&,?,%,^"
    ],
    "answers": [
      "(),%,+,^,?"
    ]
  },
  {
    "question": "Что производит с переменной операция i++?",
    "number": 60,
    "options": [
      "Прибавляет 1 после участия i в др. операции",
      "Присваивает ей статус глобальной переменной",
      "Прибавляет 1 до участия i и в др. операции",
      "Заносит значения переменной i в первые 2 регистра",
      "Выделяет переменной 1 дополнительный байт"
    ],
    "answers": [
      "Прибавляет 1 после участия i в др. операции"
    ]
  },
  {
    "question": "x=1,y=0. После операций y=x++ -1",
    "number": 61,
    "options": [
      "x=2,y=0",
      "x=2,y=1",
      "x=2,y=2",
      "x=1,y=2",
      "x=0,y=1"
    ],
    "answers": [
      "x=2,y=0"
    ]
  },
  {
    "question": "Где содеражатся только логические операции?",
    "number": 62,
    "options": [
      "&&,>,>=,<,<=,==,||,!,!=",
      "&,&&,?,??,<,>,<=,++,!=",
      ">,<,!=,*=,=,|,/,!",
      "||,->,==,!=,?:,+=,?="
    ],
    "answers": [
      "&&,>,>=,<,<=,==,||,!,!="
    ]
  },
  {
    "question": "Чем определяется порядок следования операций в выражении?",
    "number": 63,
    "options": [
      "Круглыми скобками и приоритетом операций",
      "Размером выражения и приоритетом операций",
      "Приоритетом операций",
      "Круглыми скобками",
      "Размером выражения и объемом оперативной памяти"
    ],
    "answers": [
      "Круглыми скобками и приоритетом операций"
    ]
  },
  {
    "question": "Что сделает a = b = c?",
    "number": 64,
    "options": [
      "Присвоит переменной b значение c, а затем присвоит a значение b.",
      "Присвоит переменным a и b значение переменной c.",
      "Присвоит переменной a значение переменной b, а переменной b значение переменной c.",
      "Присвоит переменной a значение переменной b.",
      "Присвоит переменной b значение переменной c."
    ],
    "answers": [
      "Присвоит переменной b значение c, а затем присвоит a значение b."
    ]
  },
  {
    "question": "Что сделает a ^= b ^= a ^= b, если  a и b переменные типа int ?",
    "number": 65,
    "options": [
      "Поменяет местами значения переменных a и b.",
      "Обнулит переменные a и b.",
      "Присвоит переменным a и b максимально значение.",
      "Инвертирует переменные a и b.",
      "Инвертирует переменные a и b и поменяет их значения местами."
    ],
    "answers": [
      "Поменяет местами значения переменных a и b."
    ]
  },
  {
    "question": "Каково назначение выражения x&1, если x - целое число?",
    "number": 66,
    "options": [
      "Проверяет переменную x на нечетность",
      "Сдвигает все биты на 1 влево",
      "Сдвигает все биты на 1 вправо",
      "Присваивает x бинарную единицу",
      "Помещает переменную x по адресу 1"
    ],
    "answers": [
      "Проверяет переменную x на нечетность"
    ]
  },
  {
    "question": "Опишите действие программы: #include <stdio.h> #include <string.h> #define S Hello, \\0World int main(void){ return ( printf(S) == strlen(S)?1:0); }",
    "number": 67,
    "options": [
      "Выводит Hello,  и возвращает 1. В случае невозможности вывода, вернет 0.",
      "Выводит Hello, \\0World и возвращает 0.",
      "Выводит Hello, World и возвращает 0. В случае невозможности вывода, вернет 1.",
      "Ничего не выводит. Сравнивает количество символов в строке с длиной строки записанной в буфер",
      "Ничего не выводит. Завершается с кодом 0, если строка ненулевая, в противном случае, завершается с кодом 1."
    ],
    "answers": [
      "Выводит Hello,  и возвращает 1. В случае невозможности вывода, вернет 0."
    ]
  },
  {
    "question": "Чему равно значение выражения ++i + ++i, если i = 5?",
    "number": 68,
    "options": [
      "14",
      "13",
      "10",
      "11",
      "12"
    ],
    "answers": [
      "14"
    ]
  },
  {
    "question": "?Что означает данный фрагмент int i = 1;  int &t=i;",
    "number": 69,
    "options": [
      "50%переменная t ссылается на переменную i",
      "50%переменная i ссылается на переменную t",
      "-100%переменная t передаёт значение переменной i и более не связана с ней",
      "-100%i и t не связаны друг с другом"
    ],
    "answers": [
      "50%переменная t ссылается на переменную i",
      "50%переменная i ссылается на переменную t"
    ]
  },
  {
    "question": "Что означает данный фрагмент float i = 1.0;  int &t=i;",
    "number": 70,
    "options": [
      "i и t не связаны друг с другом",
      "переменная t ссылается на переменную i",
      "переменная i ссылается на переменную t",
      "переменная t передаёт значение переменной i и более не связана с ней"
    ],
    "answers": [
      "i и t не связаны друг с другом"
    ]
  },
  {
    "question": "Что означает режим записи a+b",
    "number": 71,
    "options": [
      "Добавить в конец двоичного файла или создать двоичный файл для чтения/записи",
      "создать текстовый файл для записи",
      "дописать текстовый файл",
      "открыть только для записи"
    ],
    "answers": [
      "Добавить в конец двоичного файла или создать двоичный файл для чтения/записи"
    ]
  },
  {
    "question": "Какие из ниже перечисленных объявлений корректны?",
    "number": 72,
    "options": [
      "33.333%int a[0];",
      "33.333%int b[  ];",
      "33.333%int c[];",
      "-100%int d[*];"
    ],
    "answers": [
      "33.333%int a[0];",
      "33.333%int b[  ];",
      "33.333%int c[];"
    ]
  },
  {
    "question": "Укажите корректный вариант объявления массива",
    "number": 73,
    "options": [
      "50%int array[3];",
      "50%int array[];",
      "-100%int array;",
      "-100%int array[1..2]"
    ],
    "answers": [
      "50%int array[3];",
      "50%int array[];"
    ]
  },
  {
    "question": "Какие из перечисленных ключевых слов являются зарезервированными в C?",
    "number": 74,
    "options": [
      "33.333%switch",
      "33.333%enum",
      "33.333%struct",
      "-100%undo"
    ],
    "answers": [
      "33.333%switch",
      "33.333%enum",
      "33.333%struct"
    ]
  },
  {
    "question": "Имеется ли в языке Си булевский тип?",
    "number": 75,
    "options": [
      "Имеется в современной реализачии (_Bool)",
      "да, boolean",
      "нет"
    ],
    "answers": [
      "Имеется в современной реализачии (_Bool)"
    ]
  },
  {
    "question": "Истинным является выражение, значение которого...",
    "number": 76,
    "options": [
      "отлично от нуля",
      "равно TRUE",
      "равно 1"
    ],
    "answers": [
      "отлично от нуля"
    ]
  },
  {
    "question": "?Что делают операции ++ и --?",
    "number": 77,
    "options": [
      "Увлививают/уменьшают значение операнда на 1",
      "Интерпретируются как + или -",
      "Увеличивают/уменьшают значение операнда",
      "Интерпретируются как + или -, но выполняются дважды"
    ],
    "answers": [
      "Увлививают/уменьшают значение операнда на 1"
    ]
  },
  {
    "question": "Чем отличается ++i от i++?",
    "number": 78,
    "options": [
      "50%++i увеличивает значение переменной до ее использования",
      "50%i++ увеличивает значение переменной после ее использования",
      "-100%++i увеличивает значение переменной после ее использования",
      "-100%i++ увеличивает значение переменной до ее использования"
    ],
    "answers": [
      "50%++i увеличивает значение переменной до ее использования",
      "50%i++ увеличивает значение переменной после ее использования"
    ]
  },
  {
    "question": "Выберите эквивалентную запись выражения i = i + 5:",
    "number": 79,
    "options": [
      "i+=5",
      "i=+5",
      "i++5",
      "inc(i, 5)",
      "i add 5"
    ],
    "answers": [
      "i+=5"
    ]
  },
  {
    "question": "К бинарным операциям относятся...",
    "number": 80,
    "options": [
      "33.333%+, -",
      "33.333%*, /",
      "33.333%%",
      "-100%++,  --",
      "-100%унарный -",
      "-100%+=, *=, /=..."
    ],
    "answers": [
      "33.333%+, -",
      "33.333%*, /",
      "33.333%%"
    ]
  },
  {
    "question": "Остаток от деления можно найти с помощью операции...",
    "number": 81,
    "options": [
      "%",
      "/",
      "mod",
      "div"
    ],
    "answers": [
      "%"
    ]
  },
  {
    "question": "Чему равно значение выражения 3/4?",
    "number": 82,
    "options": [
      "0",
      "0.75",
      "7.5E1",
      "1"
    ],
    "answers": [
      "0"
    ]
  },
  {
    "question": "Чему равно число 015?",
    "number": 83,
    "options": [
      "50%0xD",
      "50%13",
      "-100%15",
      "-100%0.15",
      "-100%0xF",
      "-100%0x15"
    ],
    "answers": [
      "50%0xD",
      "50%13"
    ]
  },
  {
    "question": "Что является символьной константой?",
    "number": 84,
    "options": [
      "Символ, заключенный в одинарные кавычки",
      "Символы, типа \\t, \\n, \\\\, \\, \\0...",
      "Символы вида \\XXX, где X - восьмиричное число",
      "Символы, заключенные в двойные кавычки",
      "Все числа",
      "Символы, заключенные в кавычки /* ... */"
    ],
    "answers": [
      "Символ, заключенный в одинарные кавычки",
      "Символы, типа \\t, \\n, \\\\, \\, \\0...",
      "Символы вида \\XXX, где X - восьмиричное число"
    ]
  },
  {
    "question": "Когда вычисляется константное выражение?",
    "number": 85,
    "options": [
      "На этапе компиляции",
      "На этапе линковки",
      "При выполнении"
    ],
    "answers": [
      "На этапе компиляции"
    ]
  },
  {
    "question": "Как выглядят строковые константы?",
    "number": 86,
    "options": [
      "Последовательность символов, заключенных в двойные кавычки",
      "Последовательность символов, заключенная в одинарные кавычки",
      "Символы, находящиеся в символьном массиве",
      "Символы, заключенные в кавычки {* ... *}"
    ],
    "answers": [
      "Последовательность символов, заключенных в двойные кавычки"
    ]
  },
  {
    "question": "Как помечается конец строки в памяти?",
    "number": 87,
    "options": [
      "По умолчанию, компилятор помещает в конец каждой строки \\0",
      "По умолчанию, компилятор помещает в конец каждой строки LF",
      "По умолчанию, компилятор помещает в конец каждой строки CR-LF",
      "Длина строки храниться в первом (нулевом) байте строки"
    ],
    "answers": [
      "По умолчанию, компилятор помещает в конец каждой строки \\0"
    ]
  },
  {
    "question": "Чем отличаются записи short int var и short var?",
    "number": 88,
    "options": [
      "Ничем",
      "Базовым типом",
      "Второй вариант определяет вещественную переменную",
      "Второй вариант некорректен"
    ],
    "answers": [
      "Ничем"
    ]
  },
  {
    "question": "Какие из объявлений имен не являются корректными?",
    "number": 89,
    "options": [
      "33.333%1var",
      "33.333%-var",
      "33.333%return",
      "-100%_var"
    ],
    "answers": [
      "33.333%1var",
      "33.333%-var",
      "33.333%return"
    ]
  },
  {
    "question": "Какие, из перечисленных, типов относятся к базовым?",
    "number": 90,
    "options": [
      "25%char",
      "25%int",
      "25%float",
      "25%double",
      "-100%string",
      "-100%bool",
      "-100%byte"
    ],
    "answers": [
      "25%char",
      "25%int",
      "25%float",
      "25%double"
    ]
  },
  {
    "question": "Сколько бит отводится под переменную типа long int?",
    "number": 91,
    "options": [
      "50%не менее размера int",
      "50%Зависит от архитектуры ЭВМ",
      "-100%32",
      "-100%48",
      "-100%64",
      "-100%от 32 до 64"
    ],
    "answers": [
      "50%не менее размера int",
      "50%Зависит от архитектуры ЭВМ"
    ]
  },
  {
    "question": "Что делает модификатор unsigned?",
    "number": 92,
    "options": [
      "Явно указывает, что переменная беззнаковая.",
      "Явно указывает, что переменная содержит знак.",
      "Идентифицирует переменную общего назначения.",
      "Идентифицирует служебную (скрытую) переменную."
    ],
    "answers": [
      "Явно указывает, что переменная беззнаковая."
    ]
  },
  {
    "question": "Какой тип будет иметь переменная, объявленная следующим образом: unsigned short int",
    "number": 93,
    "options": [
      "Беззнаковое целое короткое число.",
      "Короткое целое число со знаком.",
      "Короткое скрытое целое число.",
      "Беззнаковое число с плавающей точкой с пониженной точностью.",
      "Короткое целое число."
    ],
    "answers": [
      "Беззнаковое целое короткое число."
    ]
  },
  {
    "question": "?Допустимо ли использование комментариев в C++ программе?",
    "number": 94,
    "options": [
      "да, допустимо",
      "нет, не допустимо",
      "только в отдельном файле",
      "только в начале файлов"
    ],
    "answers": [
      "да, допустимо"
    ]
  },
  {
    "question": "Какое значение будет присвоено переменной x при объявлении  unsigned int x = -536?",
    "number": 95,
    "options": [
      "Нет правильных ответов",
      "-536",
      "536",
      "0"
    ],
    "answers": [
      "Нет правильных ответов"
    ]
  },
  {
    "question": "Чему равен результат выражения a---b? При  a=8, b=6:",
    "number": 96,
    "options": [
      "2",
      "3",
      "1",
      "0"
    ],
    "answers": [
      "2"
    ]
  },
  {
    "question": "Оператор goto вызывает переход на:",
    "number": 97,
    "options": [
      "Метку",
      "Операцию",
      "Переменную",
      "Функцию"
    ],
    "answers": [
      "Метку"
    ]
  },
  {
    "question": "Операции && и ||:",
    "number": 98,
    "options": [
      "Комбинируют два булевых значения",
      "Сравнивают два численных значения",
      "Комбинируют два численных значения",
      "Сравнивают два булевых значения"
    ],
    "answers": [
      "Комбинируют два булевых значения"
    ]
  },
  {
    "question": "Какого цикла не существует в языке C++",
    "number": 99,
    "options": [
      "Repeat",
      "For",
      "While",
      "Do"
    ],
    "answers": [
      "Repeat"
    ]
  },
  {
    "question": "Как в языке программирования C++ обозначается логическое И",
    "number": 100,
    "options": [
      "&&",
      "||",
      "|",
      "&",
      "and"
    ],
    "answers": [
      "&&"
    ]
  },
  {
    "question": "Какая из этих операций имеет наивысший приоритет",
    "number": 101,
    "options": [
      "++",
      "==",
      "<=",
      "+="
    ],
    "answers": [
      "++"
    ]
  },
  {
    "question": "Переменная, описанная внутри блока, видима:",
    "number": 102,
    "options": [
      "От точки своего объявления до конца блока",
      "От точки своего объявления до конца программы",
      "От точки своего объявления до конца функции",
      "Внутри функции"
    ],
    "answers": [
      "От точки своего объявления до конца блока"
    ]
  },
  {
    "question": "Значение 25%8 равно:",
    "number": 103,
    "options": [
      "1",
      "2",
      "3",
      "4"
    ],
    "answers": [
      "1"
    ]
  },
  {
    "question": "Как в языке программирования Си обозначается не равно:",
    "number": 104,
    "options": [
      "!=",
      "><",
      "<>",
      "!=="
    ],
    "answers": [
      "!="
    ]
  },
  {
    "question": "Если язык обеспечивает возможность создания пользовательских типов данных, то говорят, что язык называется:",
    "number": 105,
    "options": [
      "Расширенным",
      "наследуемым",
      "инкапсулируемым",
      "перегруженным"
    ],
    "answers": [
      "Расширенным"
    ]
  },
  {
    "question": "Возможность выполнения оператором или функцией различных действий в зависимости от типа операндов называется:",
    "number": 106,
    "options": [
      "перегрузка",
      "полиморфизм",
      "инкапсуляция",
      "интеграция"
    ],
    "answers": [
      "перегрузка"
    ]
  },
  {
    "question": "Операция, выполняющая заданные действия над пользовательским типом данных, называется:",
    "number": 107,
    "options": [
      "перегруженной",
      "полиморфической",
      "инкапсулированной",
      "классифицированной"
    ],
    "answers": [
      "перегруженной"
    ]
  },
  {
    "question": "if (n > 0) { int i; for (i = 0; i < n; i++) ...} Какова область действия переменной i?",
    "number": 108,
    "options": [
      "область ограниченная фигурными скобками",
      "область от первой фигурной скобки до конца программы",
      "весь файл",
      "функция main"
    ],
    "answers": [
      "область ограниченная фигурными скобками"
    ]
  },
  {
    "question": "Какую роль играют фигурные скобки в C?",
    "number": 109,
    "options": [
      "объединение описаний и операторов в составной оператор или блок",
      "разделитель операторов",
      "признак конца оператора",
      "разграничение комментариев"
    ],
    "answers": [
      "объединение описаний и операторов в составной оператор или блок"
    ]
  },
  {
    "question": "?Каким образом записывается метка в C?",
    "number": 110,
    "options": [
      "имя метки, двоеточие",
      "двоеточие, имя метки",
      "имя метки, двоеточие, круглые скобки",
      "имя метки, двоеточие, фигурные скобки"
    ],
    "answers": [
      "имя метки, двоеточие"
    ]
  },
  {
    "question": "A=5; B=8; if (A > B) Z = A; else Z = B; Какое значение получит Z после выполнения этого кода?",
    "number": 111,
    "options": [
      "Z = 8",
      "Z = 5",
      "Z = 0",
      "Z = 12"
    ],
    "answers": [
      "Z = 8"
    ]
  },
  {
    "question": "Что означает оператор соотношения == в C?",
    "number": 112,
    "options": [
      "логическое равно",
      "побитовое равно",
      "не равно",
      "присвоить"
    ],
    "answers": [
      "логическое равно"
    ]
  },
  {
    "question": "Из каких символов не могут состоять имена переменных и символических констант?",
    "number": 113,
    "options": [
      "буквы а - я",
      "цифры 0 - 9",
      "буквы a - z",
      "знак подчеркивания"
    ],
    "answers": [
      "буквы а - я"
    ]
  },
  {
    "question": "Какому выражению эквивалентна следующая запись: x *= y + 1?",
    "number": 114,
    "options": [
      "x = x * (y + 1)",
      "x = x * y + 1",
      "x += y * 1"
    ],
    "answers": [
      "x = x * (y + 1)"
    ]
  },
  {
    "question": "Где в программе должны быть описаны переменные?",
    "number": 115,
    "options": [
      "до их использования",
      "в конце кода программы",
      "в C не описываются переменные",
      "их не обязательно описывать"
    ],
    "answers": [
      "до их использования"
    ]
  },
  {
    "question": "Какой тип данных предусмотрен для чисел с плавающей точкой?",
    "number": 116,
    "options": [
      "float",
      "char",
      "int",
      "long"
    ],
    "answers": [
      "float"
    ]
  },
  {
    "question": "Что означает операция отношения != в C?",
    "number": 117,
    "options": [
      "не равно",
      "больше либо равно",
      "меньше либо равно",
      "логическое равно"
    ],
    "answers": [
      "не равно"
    ]
  },
  {
    "question": "?Какой тип данных предусмотрен для символов?",
    "number": 118,
    "options": [
      "char",
      "int",
      "double",
      "float"
    ],
    "answers": [
      "char"
    ]
  },
  {
    "question": "Операция отношения:",
    "number": 119,
    "options": [
      "50%имеет своим результатом булево значение",
      "50%сравнивает значения двух операндов",
      "-100%присваивает значение одного операнда другому операнду",
      "-100%создает логическую комбинацию двух операндов"
    ],
    "answers": [
      "50%имеет своим результатом булево значение",
      "50%сравнивает значения двух операндов"
    ]
  },
  {
    "question": "Напишите выражение, использующее операцию отношения, результатом которого является истина, если значения переменных george и sally не равны:",
    "number": 120,
    "options": [
      "george !=sally;",
      "george ==sally;",
      "george <>sally;",
      "george !! sally;"
    ],
    "answers": [
      "george !=sally;"
    ]
  },
  {
    "question": "Напишите выражение с участием логической операции, принимающее истинное значение, если значение переменной limit равно 55, а значение переменной speed = 56:",
    "number": 121,
    "options": [
      "25%limit == 55 && speed > 55;",
      "25%limit = 55 && speed > 55;",
      "25%limit == 55 & speed > 55;",
      "25%limit = 55 & speed > 55;",
      "-100%Нет правильных ответов."
    ],
    "answers": [
      "25%limit == 55 && speed > 55;",
      "25%limit = 55 && speed > 55;",
      "25%limit == 55 & speed > 55;",
      "25%limit = 55 & speed > 55;"
    ]
  },
  {
    "question": "Перечислите в порядке убывания приоритетов типы операций:",
    "number": 122,
    "options": [
      "унарные, арифметические, отношения, логические, условные, присваивания",
      "унарные, отношения, логические, условные, арифметические, присваивания",
      "унарные, арифметические, условные, присваивания, отношения, логические",
      "унарные, арифметические, присваивания, отношения, логические, условные, присваивания"
    ],
    "answers": [
      "унарные, арифметические, отношения, логические, условные, присваивания"
    ]
  },
  {
    "question": "Выражение:",
    "number": 123,
    "options": [
      "50%является частью оператора",
      "50%всегда приводит к вычислению значения",
      "-100%является способом высказывания программы",
      "-100%всегда происходит вне функции"
    ],
    "answers": [
      "50%является частью оператора",
      "50%всегда приводит к вычислению значения"
    ]
  },
  {
    "question": "Какие из утверждений неверны:",
    "number": 124,
    "options": [
      "50%операция взятия адреса & может применяться только к константам, выражениям и переменным,",
      "50%указатель на void не может быть разыменован",
      "-100%единственное целое число, которое может быть присвоено указателю, это 0",
      "-100%указатели на разные типы данных не могут быть присвоены друг другу без использования преобразования типов."
    ],
    "answers": [
      "50%операция взятия адреса & может применяться только к константам, выражениям и переменным,",
      "50%указатель на void не может быть разыменован"
    ]
  },
  {
    "question": "Какие из утверждений верны:",
    "number": 125,
    "options": [
      "50%единственное целое число, которое может быть присвоено указателю, это 0",
      "50%указатели на разные типы данных не могут быть присвоены друг другу без использования",
      "-100%операция взятия адреса & может применяться только к константам, выражениям и переменным,",
      "-100%указатель на void не может быть разыменован"
    ],
    "answers": [
      "50%единственное целое число, которое может быть присвоено указателю, это 0",
      "50%указатели на разные типы данных не могут быть присвоены друг другу без использования"
    ]
  },
  {
    "question": "Указатель - это:",
    "number": 126,
    "options": [
      "переменная для хранения адреса",
      "адрес переменной",
      "обозначение переменной, которая будет доступна следующей",
      "тип данных для адресных переменных"
    ],
    "answers": [
      "переменная для хранения адреса"
    ]
  },
  {
    "question": "Если есть объявление int *test то выражение *test означает:",
    "number": 127,
    "options": [
      "значение переменной, на которую указывает test",
      "ссылку на значение переменной test",
      "разыменование переменной test",
      "ссылку на значение переменной, на которую указывает test",
      "указатель на переменную test"
    ],
    "answers": [
      "значение переменной, на которую указывает test"
    ]
  },
  {
    "question": "Тип переменной, на которую указывает указатель, должен присутствовать в определении указателя для того:",
    "number": 128,
    "options": [
      "чтобы компилятор мог правильно выполнять арифметические операции и получать доступ к элементам",
      "чтобы типы данных не перемешались при выполнении арифметических операций",
      "чтобы указатель мог быть использован для доступа к членам структуры",
      "чтобы не было затронуто ни одно из религиозных убеждений"
    ],
    "answers": [
      "чтобы компилятор мог правильно выполнять арифметические операции и получать доступ к элементам"
    ]
  },
  {
    "question": "Фрагмент кода вида: register int count = 0; объявляет целую переменную count, инициализированную значением 0, которая:",
    "number": 129,
    "options": [
      "Должна обрабатываться в регистре;",
      "Сохраняет своё значение между вызовами функции, в которой она определена;",
      "Является внешней, и чья область действия должна ограничиваться оставшейся частью файла, в",
      "Является внешней, и сохраняет своё значение между вызовами функции, в которой она определена;",
      "Должна обрабатываться в регистре и сохраняет своё значение между вызовами функции, в которой она определена."
    ],
    "answers": [
      "Должна обрабатываться в регистре;"
    ]
  },
  {
    "question": "Фрагмент кода: int sum, x; x=0; Sum=0; while (x<10) { Sum+=x; ++x;} printf(“%d”, sum);",
    "number": 130,
    "options": [
      "Вычисляет сумму целых чисел от 0 до 9;",
      "Вычисляет сумму целых чисел от 0 до 10;",
      "Вычилсяет сумму целых чисел от 1 до 10;",
      "Вычисляет факториал числа x;",
      "Вычисляет факториал числа x-1."
    ],
    "answers": [
      "Вычисляет сумму целых чисел от 0 до 9;"
    ]
  },
  {
    "question": "Дано уравнение y=ax^3+7. Какой из перечисленных ниже операторов C соответствует данному уравнению:",
    "number": 131,
    "options": [
      "y=a*x*x*x+7;",
      "y=a*x*x*(x+7);",
      "y=(a*x)*x*(x+7);",
      "y=a*x*(x*x+7);",
      "y=a*x*x+7."
    ],
    "answers": [
      "y=a*x*x*x+7;"
    ]
  },
  {
    "question": "Несколько операторов, заключённых в фигурных скобках ({...}) называются:",
    "number": 132,
    "options": [
      "Составной оператор;",
      "Процедура;",
      "Функция;",
      "Последовательность операндов;",
      "Управляемая последовательность."
    ],
    "answers": [
      "Составной оператор;"
    ]
  },
  {
    "question": "Операция x*=d+b - это:",
    "number": 133,
    "options": [
      "x=x*(d+b);",
      "x=x*d+b;",
      "x=x+d*b;",
      "x=d+b*x Циклы и ветвления"
    ],
    "answers": [
      "x=x*(d+b);"
    ]
  },
  {
    "question": "В каком порядке необходимо распологать ветви case и default оператора switch",
    "number": 134,
    "options": [
      "Можно в любом",
      "Сначала все ветви case, потом default",
      "Сначала default, потом case",
      "Зависит от компилятора"
    ],
    "answers": [
      "Можно в любом"
    ]
  },
  {
    "question": "Конструкция if(!valid) эквивалентна конструкции",
    "number": 135,
    "options": [
      "if (valid==0)",
      "if (valid!=NULL)",
      "if (valid==EOF)",
      "нет правильного ответа"
    ],
    "answers": [
      "if (valid==0)"
    ]
  },
  {
    "question": "Оператор break производит выход:",
    "number": 136,
    "options": [
      "Из текущего цикла или ветвления",
      "Только из цикла наибольшей глубины вложенности",
      "Только из ветвления switch наибольшей глубины вложенности",
      "Из всех вложенных циклов и ветвлений"
    ],
    "answers": [
      "Из текущего цикла или ветвления"
    ]
  },
  {
    "question": "Какого цикла не существует в языке Си++",
    "number": 137,
    "options": [
      "Repeat",
      "For",
      "While",
      "Do"
    ],
    "answers": [
      "Repeat"
    ]
  },
  {
    "question": "Что происходит при использовании break в конструкции switch?",
    "number": 138,
    "options": [
      "выход из переключателя",
      "немедленное выполнение какого-либо оператора",
      "блокируется префикс default",
      "завершение программы"
    ],
    "answers": [
      "выход из переключателя"
    ]
  },
  {
    "question": "В каком случае точки с запятой могут отсутствовать в конструкции for?",
    "number": 139,
    "options": [
      "такого случая не может быть",
      "если какое-либо из трех выражений будет опущено",
      "если все три выражения будут опущены",
      "если опущены два выражения"
    ],
    "answers": [
      "такого случая не может быть"
    ]
  },
  {
    "question": "Что происходит при выполнении оператора break в операторах for, while и do?",
    "number": 140,
    "options": [
      "немедленному выходу из самого внутреннего охватывающего его цикла",
      "немедленный выход из программы и выключение машины",
      "немедленному выходу из внешнего охватывающего его цикла",
      "выход из программы"
    ],
    "answers": [
      "немедленному выходу из самого внутреннего охватывающего его цикла"
    ]
  },
  {
    "question": "Какой оператор дает способ выбора одного из вариантов, который заключается в проверке совпадения значения данного выражения с одной из заданных констант и соответствующем ветвлении?",
    "number": 141,
    "options": [
      "50%switch",
      "50%if",
      "-100%for",
      "-100%while"
    ],
    "answers": [
      "50%switch",
      "50%if"
    ]
  },
  {
    "question": "Какое положительное качество имеет отсутствие break в конструкции switch?",
    "number": 142,
    "options": [
      "возможность связать несколько случаев с одним действием",
      "расщепление при модификации программы",
      "уникальная переносимость на различных машинах",
      "экономное использование памяти"
    ],
    "answers": [
      "возможность связать несколько случаев с одним действием"
    ]
  },
  {
    "question": "while (выражение) оператор; В каком случае эта конструкция будет выполняться бесконечно?",
    "number": 143,
    "options": [
      "если выражение всегда отлично от нуля",
      "если выражение всегда будет 0",
      "с помощью оператора while нельзя организовать бесконечный цикл",
      "зависит от среды разработки"
    ],
    "answers": [
      "если выражение всегда отлично от нуля"
    ]
  },
  {
    "question": "for (выражение 1; выражение 2; выражение 3) оператор; Как записать тот же самый код с использованием конструкции while?",
    "number": 144,
    "options": [
      "выражение 1; while (выражение 2) { оператор; выражение 3; }",
      "выражение 3; while (выражение 2) { оператор; выражение 1; }",
      "выражение 2; while (выражение 1) { оператор; выражение 3; }",
      "этот код нельзя записать с использованием конструкции while"
    ],
    "answers": [
      "выражение 1; while (выражение 2) { оператор; выражение 3; }"
    ]
  },
  {
    "question": "Какая конструкция языка C позволяет проверять условие окончания в конце, после каждого прохода через тело цикла?",
    "number": 145,
    "options": [
      "do while",
      "for",
      "while",
      "if"
    ],
    "answers": [
      "do while"
    ]
  },
  {
    "question": "Что содержит вторая часть оператора for?",
    "number": 146,
    "options": [
      "условие, которое управляет циклом",
      "команда, которая выполняется один раз перед входом в сам цикл",
      "шаг реинициализации",
      "ничего"
    ],
    "answers": [
      "условие, которое управляет циклом"
    ]
  },
  {
    "question": "?При использовании оператора while, в каком случае выполняется тело цикла?",
    "number": 147,
    "options": [
      "если истинно условие в круглых скобках",
      "если ложно условие в круглых скобках",
      "в любом случае выполняется",
      "в любом случае не вополняется"
    ],
    "answers": [
      "если истинно условие в круглых скобках"
    ]
  },
  {
    "question": "В цикле for, тело которого состоит более чем из одного оператора, точка с запятой ставится после:",
    "number": 148,
    "options": [
      "50%каждого оператора в теле цикла",
      "50%условия продолжения цикла",
      "-100%оператора цикла for",
      "-100%закрывающей фигурной скобки, ограничивающей тело цикла"
    ],
    "answers": [
      "50%каждого оператора в теле цикла",
      "50%условия продолжения цикла"
    ]
  },
  {
    "question": "Оператор break производит выход",
    "number": 149,
    "options": [
      "из цикла или ветвления switch",
      "только из цикла наибольшей глубины вложенности",
      "только из ветвления switch наибольшей глубины вложенности",
      "из всех вложенных циклов и ветвлений"
    ],
    "answers": [
      "из цикла или ветвления switch"
    ]
  },
  {
    "question": "Оператор goto вызывает переход на:",
    "number": 150,
    "options": [
      "метку",
      "операцию",
      "переменную",
      "функцию"
    ],
    "answers": [
      "метку"
    ]
  },
  {
    "question": "В повторении, управляемом счётчиком, для подсчёта числа повторений группы команд используется:",
    "number": 151,
    "options": [
      "Контрольная переменная;",
      "Метка;",
      "Структура выбора;",
      "Оператор break;",
      "Оператор count."
    ],
    "answers": [
      "Контрольная переменная;"
    ]
  },
  {
    "question": "В структуре повторения вызывает немедленное выполнение следующей итерации цикла оператор:",
    "number": 152,
    "options": [
      "Continue;",
      "Break;",
      "Goto;",
      "Exit;",
      "Skip."
    ],
    "answers": [
      "Continue;"
    ]
  },
  {
    "question": "Какие значения будут выведены: for (x=2; x<=13; x+=2) printf(“%d”, x);",
    "number": 153,
    "options": [
      "2, 4, 6, 8, 10, 12;",
      "4, 6, 8, 10, 12;",
      "4, 6, 8, 10, 12, 14;",
      "2, 4, 6, 8, 10, 12, 14;",
      "2, 6, 10, 14."
    ],
    "answers": [
      "2, 4, 6, 8, 10, 12;"
    ]
  },
  {
    "question": "Оператор принятия решений:",
    "number": 154,
    "options": [
      "If;",
      "Switch;",
      "Case;",
      "With;",
      "While. Функции"
    ],
    "answers": [
      "If;"
    ]
  },
  {
    "question": "Что возвращает malloc в случае неудачи?",
    "number": 155,
    "options": [
      "NULL",
      "Ничего",
      "-1",
      "1"
    ],
    "answers": [
      "NULL"
    ]
  },
  {
    "question": "Что возвращает функция free()?",
    "number": 156,
    "options": [
      "Ничего",
      "Размер освобожденной памяти при успехе и NULL при неудаче",
      "NULL при неудаче и 1 при успехе",
      "Всегда возвращает 0"
    ],
    "answers": [
      "Ничего"
    ]
  },
  {
    "question": "Перечислите 5 основных функций, динамически выделяющих память, языка C:",
    "number": 157,
    "options": [
      "allocmem, calloc, farmalloc, malloc, realloc",
      "allocmemory, free, malloc, farmalloc, hugealloc",
      "allocmemory, freemem, malloc, alloc, memoryalloc",
      "getmemory, initmemory, malloc, farmalloc, hugealloc",
      "realloc, malloc, farmalloc, nearalloc, hugealloc"
    ],
    "answers": [
      "allocmem, calloc, farmalloc, malloc, realloc"
    ]
  },
  {
    "question": "Какая функция из стандартной библиотеки вызывает завершение выполнения программы?",
    "number": 158,
    "options": [
      "exit()",
      "end()",
      "return(desktop)",
      "close()"
    ],
    "answers": [
      "exit()"
    ]
  },
  {
    "question": "Что означает 0 в качестве аргумента функции exit?",
    "number": 159,
    "options": [
      "успешное завершение программы",
      "неудачное завершение программы",
      "ничего не означает"
    ],
    "answers": [
      "успешное завершение программы"
    ]
  },
  {
    "question": "Определение любой функции имеет вид:",
    "number": 160,
    "options": [
      "тип-результата имя-функции(объявление аргументов) {объявления и инструкции}",
      "тип-функции имя-функции(объявление аргументов) {объявления и инструкции}",
      "тип-результата main(объявление аргументов) {объявления и инструкции}",
      "тип-результата имя-функции(объявления типов) {объявления и инструкции}"
    ],
    "answers": [
      "тип-результата имя-функции(объявление аргументов) {объявления и инструкции}"
    ]
  },
  {
    "question": "Может ли функция вызываться не main функцией?",
    "number": 161,
    "options": [
      "Может",
      "Только в стандарте ANSI",
      "Только в стандарте K&R",
      "Не может"
    ],
    "answers": [
      "Может"
    ]
  },
  {
    "question": "?В какой строке аргументы функции main написаны верно?",
    "number": 162,
    "options": [
      "(int argc,char*argv[])",
      "(int argc[],int argv)",
      "(int *argc,int argv)",
      "(int argc[],char argv)"
    ],
    "answers": [
      "(int argc,char*argv[])"
    ]
  },
  {
    "question": "Сколько точек выхода может иметь функция?",
    "number": 163,
    "options": [
      "Определяется пользователем",
      "Одну-по достижению }",
      "Две-по достижению } или return",
      "Три-по достижению },return или exit"
    ],
    "answers": [
      "Определяется пользователем"
    ]
  },
  {
    "question": "?Что произойдет, если в программе две функции будут различатся только типом возращаемого значения?",
    "number": 164,
    "options": [
      "Будет выдано сообщение, что вызов функции неопределен",
      "Компилятор выдаст сообщение о синтаксической ошибке",
      "Никаких ошибок не произойдет",
      "Из-за переполнения стека программа может неожиданно завершить выполнение"
    ],
    "answers": [
      "Будет выдано сообщение, что вызов функции неопределен"
    ]
  },
  {
    "question": "Как называется функция очистки экрана в библиотеке conio.h?",
    "number": 165,
    "options": [
      "clrscr();",
      "newscr();",
      "clean();",
      "dewash();",
      "clsscr();"
    ],
    "answers": [
      "clrscr();"
    ]
  },
  {
    "question": "Что сделает while (malloc (1)); ?",
    "number": 166,
    "options": [
      "Будет запрашивать память, пока та не кончится.",
      "Запросит 1 байт из heap.",
      "Будет бесконечно долго запрашивать память из heap",
      "Ничего"
    ],
    "answers": [
      "Будет запрашивать память, пока та не кончится."
    ]
  },
  {
    "question": "Что делает функция exit(1)?",
    "number": 167,
    "options": [
      "полностью выходит из программы",
      "выходит из испоняемой фукции",
      "выходит из исполняемого цикла",
      "ожидает нажатие клавиши"
    ],
    "answers": [
      "полностью выходит из программы"
    ]
  },
  {
    "question": "Что возвращает функция main()?",
    "number": 168,
    "options": [
      "возвращает значение при рекурсивном вызове",
      "возвращает значение операционной системе",
      "возвращает переменную которая может быть использована в дальнейшем.",
      "ничего никогда не возвращает"
    ],
    "answers": [
      "возвращает значение при рекурсивном вызове",
      "возвращает значение операционной системе"
    ]
  },
  {
    "question": "Рекурсия это -",
    "number": 169,
    "options": [
      "возможность функции вызывать саму себя",
      "возможность вызывать любую функцию из текущей функции",
      "это такое состояние функции когда она вызывает сама себя в бесконечном цикле",
      "возможность передовать в функцию функцию"
    ],
    "answers": [
      "возможность функции вызывать саму себя"
    ]
  },
  {
    "question": "Какая функция используется для возврата из функции?",
    "number": 170,
    "options": [
      "return",
      "recharge",
      "reopen",
      "repack"
    ],
    "answers": [
      "return"
    ]
  },
  {
    "question": "Сколько функций может содержать C++ программа?",
    "number": 171,
    "options": [
      "множество функций",
      "не более одной",
      "только функцию main",
      "ни одной"
    ],
    "answers": [
      "множество функций"
    ]
  },
  {
    "question": "Если у функции отсутствуют аргументы, то в круглых скобках у нее указывается...",
    "number": 172,
    "options": [
      "void",
      "null",
      "empty",
      "0"
    ],
    "answers": [
      "void"
    ]
  },
  {
    "question": "Сколько вызовов системных функций всегда будет в программе, независимо от ее реализации?",
    "number": 173,
    "options": [
      "всегда 2",
      "по крайней мере один",
      "не менее двух",
      "0"
    ],
    "answers": [
      "всегда 2"
    ]
  },
  {
    "question": "Что выполняется в первую очередь при компоновке программы?",
    "number": 174,
    "options": [
      "директивы define,include",
      "функция main",
      "приведение типов",
      "проверка классов"
    ],
    "answers": [
      "директивы define,include"
    ]
  },
  {
    "question": "Библиотечная функция exit() предназначена для выхода из:",
    "number": 175,
    "options": [
      "Программы, в которой она содержится",
      "Цикла, в котором она содержится",
      "Блока, в котором она содержится",
      "Функции, в которой она содержится"
    ],
    "answers": [
      "Программы, в которой она содержится"
    ]
  },
  {
    "question": "Библиотечная функция getche()",
    "number": 176,
    "options": [
      "Возвращает символ с отображением на экран в случае нажатия какой-либо из клавиш",
      "Возвращает символ, в случае нажатия клавиши Enter",
      "Получает информацию о количестве введенных символов",
      "Не отображает символ на экране"
    ],
    "answers": [
      "Возвращает символ с отображением на экран в случае нажатия какой-либо из клавиш"
    ]
  },
  {
    "question": "После имени функции ставится:",
    "number": 177,
    "options": [
      "()",
      "[]",
      "{}",
      "Ничего"
    ],
    "answers": [
      "()"
    ]
  },
  {
    "question": "?Что происходит с автоматическими переменными, когда функция вызывает себя рекурсивно?",
    "number": 178,
    "options": [
      "при каждом обращении образуется новый набор всех автоматических переменных, совершенно не",
      "автоматические переменные не меняются",
      "автоматические переменные увеличиваются на постоянную величину",
      "создается копия предыдущего набора"
    ],
    "answers": [
      "при каждом обращении образуется новый набор всех автоматических переменных, совершенно не"
    ]
  },
  {
    "question": "?Каким образом передаются аргументы функций в C?",
    "number": 179,
    "options": [
      "по значению",
      "по ссылке",
      "по значению и по ссылке",
      "они не передаются"
    ],
    "answers": [
      "по значению"
    ]
  },
  {
    "question": "Когда заканчивает существовать локальная переменная?",
    "number": 180,
    "options": [
      "как только закончится выполнение соответствующей функции",
      "как только закончится выполнение программы",
      "при выключении машины",
      "перед началом выполнения программы"
    ],
    "answers": [
      "как только закончится выполнение соответствующей функции"
    ]
  },
  {
    "question": "Что содержит третья часть оператора for?",
    "number": 181,
    "options": [
      "продолжение цикла",
      "команда, которая выполняется один раз перед входом в сам цикл",
      "условие, которое управляет циклом",
      "такой части нет"
    ],
    "answers": [
      "продолжение цикла"
    ]
  },
  {
    "question": "Как выглядит описание функции, возвращающей значение типа double?",
    "number": 182,
    "options": [
      "double function()",
      "function (double)",
      "double int function (double)",
      "function of double"
    ],
    "answers": [
      "double function()"
    ]
  },
  {
    "question": "Какими переменными являются аргументы внутри функций?",
    "number": 183,
    "options": [
      "50%локальными по местоположению",
      "50%глобальными для функции",
      "-100%внешними",
      "-100%общими"
    ],
    "answers": [
      "50%локальными по местоположению",
      "50%глобальными для функции"
    ]
  },
  {
    "question": "Что является областью действия для автоматической переменной, описанной в начале функции?",
    "number": 184,
    "options": [
      "та функция, в которой описано имя этой переменной",
      "все функции, в которых описано имя этой переменной",
      "область программы от точки, в которой она объявлена в исходном файле, до конца этого файла",
      "весь файл"
    ],
    "answers": [
      "та функция, в которой описано имя этой переменной"
    ]
  },
  {
    "question": "int (*comp)(); Что означает это описание?",
    "number": 185,
    "options": [
      "comp является указателем на функцию, которая возвращает значение типа int",
      "comp является указателем на функцию, которая ничего не возвращает",
      "comp является функцией, возвращающей указатель на целые",
      "comp является функцией, которая возвращает указатель на массив целых чисел"
    ],
    "answers": [
      "comp является указателем на функцию, которая возвращает значение типа int"
    ]
  },
  {
    "question": "exit( EXIT_SUCCESS ); эквивалентно:",
    "number": 186,
    "options": [
      "exit (0);",
      "exit (1);",
      "exit ( SUCCESS );",
      "exit ( EXIT_OK );"
    ],
    "answers": [
      "exit (0);"
    ]
  },
  {
    "question": "Библиотечная функция exit() предназначена для выхода из:",
    "number": 187,
    "options": [
      "программы, в которой она содержится",
      "цикла, в котором она содержится",
      "блока, в котором она содержится",
      "функции, в которой она содержится"
    ],
    "answers": [
      "программы, в которой она содержится"
    ]
  },
  {
    "question": "Напишите выражение, которое вызывает метод cheep() для объекта класса bird, являющегося 27-м элементом массива manybirds:",
    "number": 188,
    "options": [
      "manybirds [26].cheep();",
      "cheep().manybirds [26];",
      "manybirds [27].cheep();",
      "cheep().manybirds [27];"
    ],
    "answers": [
      "manybirds [26].cheep();"
    ]
  },
  {
    "question": "Переменная, которая известна только внутри функции, в которой она определена называется:",
    "number": 189,
    "options": [
      "Локальная переменная;",
      "Контрольная переменная;",
      "Параметр;",
      "Неопределённая переменная;",
      "Управляющая переменная."
    ],
    "answers": [
      "Локальная переменная;"
    ]
  },
  {
    "question": "Чтобы показать, что функция не возвращает значений или не содержит никаких параметров в заголовке используется ключевое слово:",
    "number": 190,
    "options": [
      "Void;",
      "Main;",
      "Int;",
      "Decline;",
      "Define."
    ],
    "answers": [
      "Void;"
    ]
  },
  {
    "question": "Для генерации случайных чисел используется функция:",
    "number": 191,
    "options": [
      "Rand;",
      "Srand;",
      "Randomize;",
      "Random;",
      "Ranval."
    ],
    "answers": [
      "Rand;"
    ]
  },
  {
    "question": "Переменная, объявленная вне любого блока или функции, называется:",
    "number": 192,
    "options": [
      "Глобальная;",
      "Локальная;",
      "Наружная;",
      "Общая;",
      "Основная."
    ],
    "answers": [
      "Глобальная;"
    ]
  },
  {
    "question": "Чтобы локальная переменная в функции сохраняла своё значение между вызовами функции, она должна быть объявлена со спецификатором класса памяти:",
    "number": 193,
    "options": [
      "Static;",
      "Dynamic;",
      "Unchangeable;",
      "Define;",
      "Register."
    ],
    "answers": [
      "Static;"
    ]
  },
  {
    "question": "Функция, которая вызывает себя непосредственно или косвенно называется:",
    "number": 194,
    "options": [
      "Рекурсивная функция;",
      "Функция самовызова;",
      "Связанная функция;",
      "Параллельная функция;",
      "Структурная функция."
    ],
    "answers": [
      "Рекурсивная функция;"
    ]
  },
  {
    "question": "Каждая программа на C начинает выполнение с функции:",
    "number": 195,
    "options": [
      "Main;",
      "Void;",
      "Include;",
      "Int;",
      "Mail;"
    ],
    "answers": [
      "Main;"
    ]
  },
  {
    "question": "Тело каждой функции начинается и заканчивается с:",
    "number": 196,
    "options": [
      "{...};",
      "(...);",
      "Begin...end;",
      "Main...return;",
      "/*...*/; Файлы"
    ],
    "answers": [
      "{...};"
    ]
  },
  {
    "question": "Что представляет собой внутреннее логическое имя файла?",
    "number": 197,
    "options": [
      "Указатель на одномерный массив",
      "Совокупность символов с символом завершения строки в конце",
      "Количество памяти, выделяемое под внешнее имя файла",
      "Указатель на начало таблицы размещения файлов",
      "Определяемая пользователем совокупность символов"
    ],
    "answers": [
      "Указатель на одномерный массив"
    ]
  },
  {
    "question": "С помощью какой функции можно открыть файл в C?",
    "number": 198,
    "options": [
      "fopen",
      "fileopen",
      "openfile"
    ],
    "answers": [
      "fopen"
    ]
  },
  {
    "question": "Какой символ обозначает конец файла?",
    "number": 199,
    "options": [
      "Конец файла никак не обозначается",
      "CR-LF",
      "CR",
      "LF",
      "0",
      "255"
    ],
    "answers": [
      "Конец файла никак не обозначается"
    ]
  },
  {
    "question": "Какого типа должна быть переменная fd? fd = open (filename, O_RDONLY, 0);",
    "number": 200,
    "options": [
      "integer",
      "*integer",
      "FILE",
      "*FILE"
    ],
    "answers": [
      "integer"
    ]
  },
  {
    "question": "Какого типа должна быть переменная fd? fd = fopen (filename, w);",
    "number": 201,
    "options": [
      "FILE",
      "*integer",
      "integer",
      "*FILE"
    ],
    "answers": [
      "FILE"
    ]
  },
  {
    "question": "Функция read (FileDescriptor, ptr, 4) возвращает ноль, в случае...",
    "number": 202,
    "options": [
      "Конца файла",
      "Ошибки чтения",
      "Успешного заверщения",
      "если файл открыт для записи"
    ],
    "answers": [
      "Конца файла"
    ]
  },
  {
    "question": "Признаком начала следующей строки в текстовом файле является символ(ы):",
    "number": 203,
    "options": [
      "33.333%LF (0xA)",
      "33.333%CR (0xD)",
      "33.333%CR-LF (0xD, 0xA)",
      "-100%0x20",
      "-100%0xCR",
      "-100%0xFF"
    ],
    "answers": [
      "33.333%LF (0xA)",
      "33.333%CR (0xD)",
      "33.333%CR-LF (0xD, 0xA)"
    ]
  },
  {
    "question": "Работа с директивой #define",
    "number": 204,
    "options": [
      "это директива которая определяет идентификатор и последовательность символов, которая будет",
      "после записи необходимо ставит точку с запятой",
      "это верная запись #define имя_макроса = последовательность_символов"
    ],
    "answers": [
      "это директива которая определяет идентификатор и последовательность символов, которая будет"
    ]
  },
  {
    "question": "Что делает функция fread()?",
    "number": 205,
    "options": [
      "считывает данные из файла в буфер",
      "считывает буфер в файл",
      "выводит информацию из файла на экран",
      "проверяет файл на ошибки"
    ],
    "answers": [
      "считывает данные из файла в буфер"
    ]
  },
  {
    "question": "?Что делает функция fclose()?",
    "number": 206,
    "options": [
      "записывает в файл все данные, которые еще оставались в дисковом буфере и закрывает файл на",
      "не записывает в файл  данные буфера,а сразу закрывает файл на уровне операционной системы.",
      "записывает в файл все данные, которые еще оставались в дисковом буфере и закрывает файл на",
      "не записывает в файл  данные буфера,а сразу закрывает файл на низком уровне."
    ],
    "answers": [
      "записывает в файл все данные, которые еще оставались в дисковом буфере и закрывает файл на"
    ]
  },
  {
    "question": "Что делает функция fopen()",
    "number": 207,
    "options": [
      "открывает файл",
      "читает строку из файла",
      "закрывает файл",
      "стирает файл"
    ],
    "answers": [
      "открывает файл"
    ]
  },
  {
    "question": "С помощью какой команды осуществляется включение файлов?",
    "number": 208,
    "options": [
      "#INCLUDE FILENAME",
      "#DEFINE FILENAME",
      "#DEFINE FILENAME",
      "#INCLUDE FILENAME"
    ],
    "answers": [
      "#INCLUDE FILENAME"
    ]
  },
  {
    "question": "В чём разница между потоком и файлом?",
    "number": 209,
    "options": [
      "устройство ввода вывода на высоком уровне называется потоком, а само устройство - файлом",
      "устройство ввода вывода на высоком уровне называется файлом, а само устройство - потоком",
      "доступ потока не осуществляется с выводом или вводом на устройство",
      "доступ файла не осуществляется с выводом или вводом на устройство",
      "нет никакой разницы"
    ],
    "answers": [
      "устройство ввода вывода на высоком уровне называется потоком, а само устройство - файлом"
    ]
  },
  {
    "question": "что такое текстовые потоки?",
    "number": 210,
    "options": [
      "последовательностиь символов",
      "набор байтов",
      "массив символов"
    ],
    "answers": [
      "последовательностиь символов"
    ]
  },
  {
    "question": "Какое утверждение верно?",
    "number": 211,
    "options": [
      "В языке Си файлом может быть всё что угодно (дисковый файл, терминал или принтер)",
      "Все потоки и файлы одинаковы",
      "невозможно потоком связаться с устройством",
      "ко всем файлам возможен прямой доступ"
    ],
    "answers": [
      "В языке Си файлом может быть всё что угодно (дисковый файл, терминал или принтер)"
    ]
  },
  {
    "question": "Какие из перечисленных ключевых слов являются зарезервированными в C?",
    "number": 212,
    "options": [
      "33.333%switch",
      "33.333%enum",
      "33.333%struct",
      "-100%undo"
    ],
    "answers": [
      "33.333%switch",
      "33.333%enum",
      "33.333%struct"
    ]
  },
  {
    "question": "Какие из перечисленных ключевых слов не являются зарезервированными в C?",
    "number": 213,
    "options": [
      "undo",
      "switch",
      "enum",
      "struct"
    ],
    "answers": [
      "undo"
    ]
  },
  {
    "question": "Какие из ниже перечисленных объявлений корректны?",
    "number": 214,
    "options": [
      "50%int a[0];",
      "50%int b[255];",
      "-100%int c[];",
      "-100%int d[*];"
    ],
    "answers": [
      "50%int a[0];",
      "50%int b[255];"
    ]
  },
  {
    "question": "Укажите корректный вариант объявления массива",
    "number": 215,
    "options": [
      "int array[3];",
      "int array;",
      "int array[];",
      "int array[1..2]"
    ],
    "answers": [
      "int array[3];"
    ]
  },
  {
    "question": "Существует массив int a[10], необходимо обратиться к элементу (5) какой способ верен?",
    "number": 216,
    "options": [
      "а[4]",
      "(a+4)",
      "(a+5)",
      "((int)а+2)",
      "a[5] Массивы"
    ],
    "answers": [
      "а[4]",
      "(a+4)"
    ]
  },
  {
    "question": "Как в языке С объявить массив целого типа из 10 элементов?",
    "number": 217,
    "options": [
      "int A[10]",
      "float*B (10)",
      "int*B[9]",
      "int A{10}",
      "float B{10}"
    ],
    "answers": [
      "int A[10]"
    ]
  },
  {
    "question": "Как в языке С представляются многомерные массивы?",
    "number": 218,
    "options": [
      "в виде последовательности символов в памяти",
      "в виде совокупности многомерных ячеек памяти",
      "в виде линейной комбинации независимых переменных",
      "в виде особого одномерного массива",
      "в виде совокупности регистров стека"
    ],
    "answers": [
      "в виде последовательности символов в памяти"
    ]
  },
  {
    "question": "В каком варианте правильно объявлен массив из 10 элементов целого типа?",
    "number": 219,
    "options": [
      "int a[10]",
      "int *a[9]",
      "int *a[11]",
      "float a[10]",
      "void a[10]"
    ],
    "answers": [
      "int a[10]"
    ]
  },
  {
    "question": "Чем характеризируется любой одномерный массив?",
    "number": 220,
    "options": [
      "Именем массива и числом элементов",
      "Именем массива и числом параметров",
      "Числом элементов и аргументами",
      "Параметрами и аргументами",
      "Константами и указателями"
    ],
    "answers": [
      "Именем массива и числом элементов"
    ]
  },
  {
    "question": "К чему может привести использование очень больших локальных массивов?",
    "number": 221,
    "options": [
      "Вследствие переполнения стека программа завершится до начала работы",
      "Программа не будет работать в системе DOS",
      "Снизится скорость работы",
      "Компилятор не сможет собрать программу"
    ],
    "answers": [
      "Вследствие переполнения стека программа завершится до начала работы"
    ]
  },
  {
    "question": "Почему нельзя передать двумерный массив функции, ожидающей указатель на указатель?",
    "number": 222,
    "options": [
      "Потому что массив превратится в указатель на массив",
      "Потому что размер указателя всегда больше размера массива",
      "Потому что в данном случае не определен размер указателя",
      "Потому что размер двумерного массива будет больше размера указателя на указатель"
    ],
    "answers": [
      "Потому что массив превратится в указатель на массив"
    ]
  },
  {
    "question": "Что вычислит оператор sizeof при попытке определить с помощью него размер массива, который передан функции в качестве параметра?",
    "number": 223,
    "options": [
      "Размер указателя на массив",
      "Количество элементов массива",
      "Размер массива указателей",
      "Размер указателя на массив указателей",
      "Разме массива указателей на указатель"
    ],
    "answers": [
      "Размер указателя на массив"
    ]
  },
  {
    "question": "Какие из этих пар выражений не эквивалентны?",
    "number": 224,
    "options": [
      "Все эквивалентны",
      "arr[0][0] и **arr",
      "vec[i]  и *(vec+i)",
      "arr[i][j] и *(*(arr+i)+j)"
    ],
    "answers": [
      "Все эквивалентны"
    ]
  },
  {
    "question": "Максимальный объем массива при работе в Borland C++ под управлением MS-DOS составляет",
    "number": 225,
    "options": [
      "64 Кбайта",
      "16 Кбайт",
      "128 Кбайт",
      "256 Кбайт"
    ],
    "answers": [
      "64 Кбайта"
    ]
  },
  {
    "question": "Можно ли использовать в C многомерные массивы?",
    "number": 226,
    "options": [
      "можно",
      "только двумерные и трехмерные",
      "только двумерные массивы",
      "нельзя"
    ],
    "answers": [
      "можно"
    ]
  },
  {
    "question": "Сколько элементов целочисленного массива будет зарезервировано в памяти при объявлении int c[12]?",
    "number": 227,
    "options": [
      "12",
      "11",
      "13",
      "объявление вызовет синтаксическую ошибку"
    ],
    "answers": [
      "12"
    ]
  },
  {
    "question": "Можно ли задать двумерный массив в динамической памяти?",
    "number": 228,
    "options": [
      "Да, выделив память для каждой строки в отдельности, и связав адреса строк в отдельном массиве.",
      "Да, используя (user_t **) malloc ( matrixSize ).",
      "Да, используя стандартную функцию matrix.",
      "Нет."
    ],
    "answers": [
      "Да, выделив память для каждой строки в отдельности, и связав адреса строк в отдельном массиве."
    ]
  },
  {
    "question": "Какой размер в байтах будет иметь после инициализации массив int m[5] = {1, 2, 3, 4, 5, 6}?",
    "number": 229,
    "options": [
      "объявление вызовет синтаксическую ошибку",
      "10",
      "12",
      "6"
    ],
    "answers": [
      "объявление вызовет синтаксическую ошибку"
    ]
  },
  {
    "question": "Выберите верные утверждения:",
    "number": 230,
    "options": [
      "33.333%массив является группой логически связанных ячеек памяти",
      "33.333%индекс может быть целым числом или целочисленным выражением",
      "33.333%общий размер одномерного массива вычисляется: всего байт = размер типа в байтах *",
      "-100%элементы одного массива могут принадлежать разным типам",
      "-100%индекс седьмого элемента массива равен 7"
    ],
    "answers": [
      "33.333%массив является группой логически связанных ячеек памяти",
      "33.333%индекс может быть целым числом или целочисленным выражением",
      "33.333%общий размер одномерного массива вычисляется: всего байт = размер типа в байтах *"
    ]
  },
  {
    "question": "Объявите целочисленный массив с 3 строками и 3 столбцами, предполагая, что была определена символическая константа SIZE, равная 3:",
    "number": 231,
    "options": [
      "int table [SIZE][SIZE];",
      "double table [SIZE][SIZE];",
      "float table [3][3];",
      "char table [SIZE][SIZE];"
    ],
    "answers": [
      "int table [SIZE][SIZE];"
    ]
  },
  {
    "question": "Доступ к элементам массива осуществляется с помощью:",
    "number": 232,
    "options": [
      "индекса элемента",
      "подхода FIFO",
      "операции точки",
      "имени элемента"
    ],
    "answers": [
      "индекса элемента"
    ]
  },
  {
    "question": "Напишите выражение, которое определяет одномерный массив, именованный как doubleArray, типа double, содержащий 100 элементов:",
    "number": 233,
    "options": [
      "double doubleArray [100];",
      "double = doubleArray [100];",
      "double &doubleArray [100];",
      "double[100] doubleArray;"
    ],
    "answers": [
      "double doubleArray [100];"
    ]
  },
  {
    "question": "Элементы 10-элементного массива нумеруются начиная с и до:",
    "number": 234,
    "options": [
      "0,9",
      "1,10",
      "неизвестно, зависит от структуры памяти",
      "неизвестно, зависит от разрядности процессора"
    ],
    "answers": [
      "0,9"
    ]
  },
  {
    "question": "?Напишите выражение, которое выводит j элемент массива doubleArray с помощью cout и операции <<",
    "number": 235,
    "options": [
      "cout <<doubleArray [j];",
      "cout <<doubleArray [j];",
      "cout <<%sdoubleArray [j];",
      "cout <<%s,doubleArray [j];"
    ],
    "answers": [
      "cout <<doubleArray [j];"
    ]
  },
  {
    "question": "При доступе к многомерному массиву его индексы:",
    "number": 236,
    "options": [
      "заключены в квадратные скобки",
      "разделены запятыми",
      "заключены в квадратные скобки и разделены запятыми",
      "разделены занятыми и заключены в квадратные скобки"
    ],
    "answers": [
      "заключены в квадратные скобки"
    ]
  },
  {
    "question": "Напишите выражение для доступа к 4-му элементу 2-го подмассива двумерного массива twoD:",
    "number": 237,
    "options": [
      "twoD [2][4];",
      "twoD [4][2];",
      "twoD [1][3];",
      "twoD [3][1];"
    ],
    "answers": [
      "twoD [2][4];"
    ]
  },
  {
    "question": "Имя массива представляет собой:",
    "number": 238,
    "options": [
      "50%ссылку на адрес в памяти",
      "50%константный указатель",
      "-100%оператором",
      "-100%указателем на оператор"
    ],
    "answers": [
      "50%ссылку на адрес в памяти",
      "50%константный указатель"
    ]
  },
  {
    "question": "При передаче имени массива в функцию она:",
    "number": 239,
    "options": [
      "50%работает с тем же массивом, с которым работает и вызывающая функцию программа",
      "50%ссылается на массив, используя другое имя, чем то, которое используется в  вызывающей",
      "-100%работает с копией массива, переданной программой",
      "-100%ссылается на массив, используя то же имя, которое используется в вызывающей программе Структуры и классы"
    ],
    "answers": [
      "50%работает с тем же массивом, с которым работает и вызывающая функцию программа",
      "50%ссылается на массив, используя другое имя, чем то, которое используется в  вызывающей"
    ]
  },
  {
    "question": "Что представляет собой полиморфизм в языке C++?",
    "number": 240,
    "options": [
      "Использование одного участка памяти многими функциями одновременно",
      "Иерархическая структура построения классов и структур",
      "Возможность доступа ко многим участкам памяти одновременно",
      "Возможность объявления в программе многих классов",
      "Возможность передачи свойств одного класса другому"
    ],
    "answers": [
      "Использование одного участка памяти многими функциями одновременно"
    ]
  },
  {
    "question": "Что представляет собой наследование в языке C++?",
    "number": 241,
    "options": [
      "Возможность передачи свойств одного класса другому",
      "Невозможность изменить члены класса вне класса",
      "Возможность изменить члены класса вне класса",
      "Использование одного участка памяти многими фукнкциями одновременно",
      "Возможность доступа членов класса к глобальным переменным"
    ],
    "answers": [
      "Возможность передачи свойств одного класса другому"
    ]
  },
  {
    "question": "Что произойдет, если полю не присвоить имя?",
    "number": 242,
    "options": [
      "ничего, это допустимо, неименованные поля (только двоеточие и ширина) используются для",
      "ошибка при выполнении программы",
      "ошибка компилятора"
    ],
    "answers": [
      "ничего, это допустимо, неименованные поля (только двоеточие и ширина) используются для"
    ]
  },
  {
    "question": "Что такое объединение?",
    "number": 243,
    "options": [
      "это переменная, которая в различные моменты времени может содержать объекты разных типов и",
      "это набор из одной или более переменных, возможно различных типов, сгруппированных под одним именем для удобства обработки"
    ],
    "answers": [
      "это переменная, которая в различные моменты времени может содержать объекты разных типов и"
    ]
  },
  {
    "question": "Каким образом может быть осуществлен доступ к членам объединения?",
    "number": 244,
    "options": [
      "имя объединения.член",
      "указатель объединения -> член",
      "имя объединения -> член"
    ],
    "answers": [
      "имя объединения.член",
      "указатель объединения -> член"
    ]
  },
  {
    "question": "С помощью какой конструкции может быть указан член определенной структуры?",
    "number": 245,
    "options": [
      "имя структуры.член",
      "член.имя структуры",
      "имя структуры:член"
    ],
    "answers": [
      "имя структуры.член"
    ]
  },
  {
    "question": "При обращении к полю структуры левым операндом операции (.) является:",
    "number": 246,
    "options": [
      "структурная переменная",
      "поле структуры",
      "имя структуры",
      "ключевое слово struct"
    ],
    "answers": [
      "структурная переменная"
    ]
  },
  {
    "question": "Перечисление объединяет:",
    "number": 247,
    "options": [
      "50%Именованные целые числа",
      "50%Константные значения",
      "-100%Данные различных типов",
      "-100%Логически связанные переменные"
    ],
    "answers": [
      "50%Именованные целые числа",
      "50%Константные значения"
    ]
  },
  {
    "question": "Определение класса это:",
    "number": 248,
    "options": [
      "определение всех его методов и данных",
      "объявление всех его методов и полей",
      "инициализация всех его полей и вызов конструктора",
      "проверка всех его методов и полей"
    ],
    "answers": [
      "определение всех его методов и данных"
    ]
  },
  {
    "question": "Пусть нам дан указатель р, указывающий на объект типа upperdass. Напишите выражение, позволяющее вызвать метод exclu() этого класса для данного объекта:",
    "number": 249,
    "options": [
      "50%р->exclu();",
      "50%(*р).exclu();",
      "-100%р->&exclu();",
      "-100%р->exclu();"
    ],
    "answers": [
      "50%р->exclu();",
      "50%(*р).exclu();"
    ]
  },
  {
    "question": "Операция new:",
    "number": 250,
    "options": [
      "получает память для новой переменной",
      "возвращает указатель на переменную",
      "создает переменную с именем new",
      "позволяет узнать, сколько памяти свободно на данный момент"
    ],
    "answers": [
      "получает память для новой переменной",
      "возвращает указатель на переменную"
    ]
  },
  {
    "question": "Как правильно описать структуру?",
    "number": 251,
    "options": [
      "после слово struct идет имя структуры, затем фигурные скобки, поля, а в конце точка с запятой",
      "после слово struct идет имя структуры, затем фигурные скобки, поля",
      "после слово struct идет имя структуры, затем круглые скобки внутри поля, а в конце без точки с",
      "после слово struct идет имя структуры, затем описываются поля без точки с запятой, а в конце точка с",
      "идет имя структуры, затем круглые скобки внутри поля, а в конце слово struct  и точка с запятой"
    ],
    "answers": [
      "после слово struct идет имя структуры, затем фигурные скобки, поля, а в конце точка с запятой"
    ]
  },
  {
    "question": "Как правильно обратиться к структуре? struct part{int modelnumber;int partnumber:float cost;}parti;",
    "number": 252,
    "options": [
      "parti.modelnumber = 6244;",
      "(*parti).modelnumber = 6244;",
      "&parti.modelnumber = 6244;",
      "parti->modelnumber = 6244;"
    ],
    "answers": [
      "parti.modelnumber = 6244;"
    ]
  },
  {
    "question": "Структура объединяет :",
    "number": 253,
    "options": [
      "данные разных типов",
      "переменные разных типов",
      "данные одного типа",
      "целые именованные значения"
    ],
    "answers": [
      "данные разных типов"
    ]
  },
  {
    "question": "При обращении к полю структуры левым операндом операции (.) является:",
    "number": 254,
    "options": [
      "структурная переменная",
      "поле структуры",
      "имя структуры",
      "ключевое слово struct"
    ],
    "answers": [
      "структурная переменная"
    ]
  },
  {
    "question": "?Сколько байтов памяти займут три структурные переменные типа time, если структура time содержит три поля типа int, если int равен 4 байта?",
    "number": 255,
    "options": [
      "12",
      "24",
      "18",
      "36"
    ],
    "answers": [
      "12"
    ]
  },
  {
    "question": "Напишите выражение для доступа к переменной salary структуры, которая является 17-м элементом массива emplist:",
    "number": 256,
    "options": [
      "emplist [16].salary",
      "emplist [17].salary",
      "emplist.salary [16]",
      "emplist.salary [17]"
    ],
    "answers": [
      "emplist [16].salary"
    ]
  },
  {
    "question": "Связный список - это:",
    "number": 257,
    "options": [
      "структура, в которой имеется элемент, представляющий собой указатель на следующий элемент",
      "структура, в которой каждый элемент состоит из данных или указателя на данные",
      "массив указателей, указывающих на элементы списки",
      "структура, в которой указатель указывает на следующие данные"
    ],
    "answers": [
      "структура, в которой имеется элемент, представляющий собой указатель на следующий элемент"
    ]
  },
  {
    "question": "Перечисление объединяет:",
    "number": 258,
    "options": [
      "именованные константные значения",
      "именованные целые переменные",
      "данные различных типов",
      "логически связанные переменные"
    ],
    "answers": [
      "именованные константные значения"
    ]
  },
  {
    "question": "Если мы хотим отсортировать множество больших объектов или структур, то будет более эффективным:",
    "number": 259,
    "options": [
      "создать массив указателей на них и отсортировать его",
      "поместить их в массив и сортировать как его элементы",
      "поместить эти объекты в связный список и отсортировать его",
      "поместить ссылки на эти объекты в массив и отсортировать его Примеры"
    ],
    "answers": [
      "создать массив указателей на них и отсортировать его"
    ]
  },
  {
    "question": "#includе <stdіo.h> vоіd mystеry(int a, int b) {(!(a>b))?рrіntf(First):printf(Sесond);} int mаin() {іnt а = 5, b = 4;mуstery(а, b);return 0;} Что будет выведено на экран?",
    "number": 260,
    "options": [
      "Second",
      "First",
      "4",
      "5",
      "ничего"
    ],
    "answers": [
      "Second"
    ]
  },
  {
    "question": "#include <stdio.h> struct Node{ int i;Node* next; // 1 Node* prev; // 2 }node; // 3 int main() {node.i = 5; // 4 node.next = NULL; node.prev = NULL; return 0; } В каких строках содержатся ошибки?",
    "number": 261,
    "options": [
      "Нет ошибок",
      "1",
      "2",
      "3",
      "4"
    ],
    "answers": [
      "Нет ошибок"
    ]
  },
  {
    "question": "Что произойдет, если попытаться скомпилировать и запустить следующую программу? #include <stdio.h> int main(int argc, char *argv[]) {int a = 2; switch(a) {default:printf(default);break; case 1:printf(1); break;} return 0;}",
    "number": 262,
    "options": [
      "На экран будет выведено default",
      "Произойдет ошибка компиляции",
      "Произойдет ошибка времени выполнения",
      "На экран будет выведено 1",
      "Программа будет успешно скомпилирована и ничего не выведет на экран."
    ],
    "answers": [
      "На экран будет выведено default"
    ]
  },
  {
    "question": "В каких строчках кода есть ошибки? const char *test() { const char *s = Hello //1 ,   // 2 world!  // 3 ;  // 4 return s;  // 5}",
    "number": 263,
    "options": [
      "тут нет ошибок",
      "1",
      "2",
      "3",
      "4",
      "5"
    ],
    "answers": [
      "тут нет ошибок"
    ]
  },
  {
    "question": "Сколько раз выполнится цикл? int i; while(i < 10) { printf(%d-ый раз\\n, i+1); i++; }",
    "number": 264,
    "options": [
      "количество итераций не определено",
      "9 раз",
      "10 раз"
    ],
    "answers": [
      "количество итераций не определено"
    ]
  },
  {
    "question": "Укажите корректный прототип для функции: int sum(int a, int b) {return a + b;}",
    "number": 265,
    "options": [
      "33.333%*int sum(int, int);",
      "33.333%*int sum(int a, int b);",
      "33.333%*sum(int, int);",
      "-100%sum(int, int): int;",
      "-100%sum() int a, int b;"
    ],
    "answers": [
      "33.333%*int sum(int, int);",
      "33.333%*int sum(int a, int b);",
      "33.333%*sum(int, int);"
    ]
  },
  {
    "question": "Что произойдет в результате компиляции и выполнения такого кода: #include<stdio.h> const int a = 12; int c = a;      //1 int * b = &a;   //2 int main() {printf (%d %d %d, a, *b, c+*b);return 0;}",
    "number": 266,
    "options": [
      "Произойдет ошибка компиляции в строке 2",
      "Произойдет ошибка компиляции в строке 1",
      "Будет напечатано: 12 12 24",
      "Возникнет ошибка выполнения"
    ],
    "answers": [
      "Произойдет ошибка компиляции в строке 2"
    ]
  },
  {
    "question": "Что произойдет в результате компиляции и выполнения такого кода: #include <stdio.h> //const int a = 12; int c = a;   //1 int * b = &a; //2 int main () {printf (%d %d %d, a, *b, c+*b);return 0;}",
    "number": 267,
    "options": [
      "Будет напечатано: 12 12 24",
      "Произойдет ошибка компиляции в строке 1",
      "Произойдет ошибка компиляции в строке 2",
      "Возникнет ошибка выполнения"
    ],
    "answers": [
      "Будет напечатано: 12 12 24"
    ]
  },
  {
    "question": "В каких строчках содержатся ошибки? char *s=”Hello”;  /* 1 */ char *p1=s, *p2;  /* 2 */ p2=s+4;  /* 3 */ printf(“%p”,p1 + p2);  /* 4 */ printf(“%p”,p2 - p1);  /* 5 */ printf(“%d”,(*p1 *p2);  /* 6 */ printf(“%p”,p2+*p1);  /* 7 */ printf(“%p”,p2-*p1);  /* 8 */ printf(“%d”,p2 - p1);  /* 9 */",
    "number": 268,
    "options": [
      "4",
      "1",
      "2",
      "3",
      "5",
      "6",
      "7",
      "8",
      "9",
      "в этом коде нет ошибок"
    ],
    "answers": [
      "4"
    ]
  },
  {
    "question": "В каких строчках не содержатся ошибки? char *s=”Hello”;  /* 1 */ char *p1=s, *p2;  /* 2 */ p2=s+4;  /* 3 */ printf(“%p”,p1 + p2);  /* 4 */ printf(“%p”,p2 - p1);  /* 5 */ printf(“%d”,(*p1 *p2);  /* 6 */ printf(“%p”,p2+*p1);  /* 7 */ printf(“%p”,p2-*p1);  /* 8 */ printf(“%d”,p2 - p1);  /* 9 */",
    "number": 269,
    "options": [
      "2",
      "3",
      "5",
      "6",
      "7",
      "8",
      "9",
      "4",
      "в этом коде нет ошибок"
    ],
    "answers": [
      "2",
      "3",
      "5",
      "6",
      "7",
      "8",
      "9"
    ]
  },
  {
    "question": "Что произойдет в результате компиляции и выполнения данного кода: #include <stdio.h> void f() { printf(%d, 1); } int main() { void (*a)() = f; // 1 a();             // 2 return 0;}",
    "number": 270,
    "options": [
      "Будет напечатано число 1",
      "Ошибка времени выполнения",
      "Будет напечатано число 0",
      "Ошибка компиляции в строке 1",
      "Ошибка компиляции в строке 2"
    ],
    "answers": [
      "Будет напечатано число 1"
    ]
  },
  {
    "question": "Что выведет на экран следующий участок кода, если по умолчанию тип char беззнаковый? char S[] = EYY; printf(S, S[printf(S)]--);",
    "number": 271,
    "options": [
      "SEXY",
      "EYYS",
      "YES",
      "SEYY",
      "EYES"
    ],
    "answers": [
      "SEXY"
    ]
  },
  {
    "question": "Как в прототипе функции func() можно объявить параметр - одномерный целочисленный массив с именем х, чтобы следующий код скомпилировался? int main(void){int i[10];func(i);return 0;}",
    "number": 272,
    "options": [
      "33.333%*int *x",
      "33.333%*int x[10]",
      "33.333%*int x[]",
      "-100%Верного ответа нет"
    ],
    "answers": [
      "33.333%*int *x",
      "33.333%*int x[10]",
      "33.333%*int x[]"
    ]
  },
  {
    "question": "В каких строчках кода находятся ошибки? #include <stdio.h> int main() {if (0)  // 1 if (1){  // 2 for(;;);  // 3 while (1);}  // 4 else printf(foo);  // 5 else printf(bar);  // 6 return 0;}",
    "number": 273,
    "options": [
      "тут нет ошибок",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6"
    ],
    "answers": [
      "тут нет ошибок"
    ]
  },
  {
    "question": "Выберите все фрагменты кода, которые откомпилируются успешно (содержимое переменных и контекст применения значения не имеют)?",
    "number": 274,
    "options": [
      "50%c = a+++ ++b;",
      "50%c = a++ + ++b;",
      "-100%c = a++++ +b;",
      "-100%c = a+ ++++b;",
      "-100%c = a++ +++b;"
    ],
    "answers": [
      "50%c = a+++ ++b;",
      "50%c = a++ + ++b;"
    ]
  },
  {
    "question": "Что выведет следующая программа? #include <stdio.h> int i1; int main() {static char c2 = 4; i1 = 128; printf(%d\\n, c2 * (char)i1); return 0;}",
    "number": 275,
    "options": [
      "Ошибка при линковке",
      "0",
      "512",
      "-512",
      "Зависит от компилятора"
    ],
    "answers": [
      "Ошибка при линковке"
    ]
  },
  {
    "question": "Что выведет следующая программа? #include <stdio.h> //extern int i1; int main() {i1 = 128;printf(%d\\n, (unsigned char) i1);getchar();return 0;}",
    "number": 276,
    "options": [
      "128",
      "-128",
      "512",
      "0"
    ],
    "answers": [
      "128"
    ]
  },
  {
    "question": "Дан прототип функции: float calculate(int a, int b, float c); Как правильно объявить указатель на эту функцию и присвоить ему адрес функции?",
    "number": 277,
    "options": [
      "50%float (*ptr)(int a, int b, float c) = calculate;",
      "50%float (*ptr)(int, int, float) = calculate;",
      "-100%float* (ptr)(int, int, float) = calculate;",
      "-100%float* (ptr)(int, int, float) = calculate();",
      "-100%float (*ptr)(int, int, float) = calculate();"
    ],
    "answers": [
      "50%float (*ptr)(int a, int b, float c) = calculate;",
      "50%float (*ptr)(int, int, float) = calculate;"
    ]
  },
  {
    "question": "Какой будет результат следующей программы? #include <stdio.h> #include <stdlib.h> int foo() {printf(foo );return 1;} int main() {int x = foo();printf(x = %d, x);return 0;}",
    "number": 278,
    "options": [
      "x = 1",
      "foo x = 1",
      "foo x = 0",
      "x = 0",
      "Ошибка во время выполнения",
      "Ошибка компиляции"
    ],
    "answers": [
      "x = 1"
    ]
  },
  {
    "question": "Чему равен sizeof(ab\\0cd\\tefg)",
    "number": 279,
    "options": [
      "10",
      "13",
      "9",
      "3",
      "20"
    ],
    "answers": [
      "10"
    ]
  },
  {
    "question": "Сколько параметров может принимать на вход данная функция: int foo_a();",
    "number": 280,
    "options": [
      "*любое",
      "0",
      "1",
      "2"
    ],
    "answers": [
      "*любое"
    ]
  },
  {
    "question": "Что ошибочно в следующем фрагменте кода: int * x = (int *) malloc(100 * sizeof(int)); x = realloc(x, sizeof(int) * 200);",
    "number": 281,
    "options": [
      "Если realloc не удастся, память будет утеряна",
      "Код корректен, так как realloc гарантированно произойдет без ошибок",
      "Код корректен, так как realloc изначально очистит память и даже в случае возникновения ошибки",
      "Данный код не скомпилируется"
    ],
    "answers": [
      "Если realloc не удастся, память будет утеряна"
    ]
  },
  {
    "question": "Чему будет равно значение переменной x после выполнения следующего фрагмента кода: int a = 010; int b = 100; int c = 110; int d = 0x10; int x = d / (c - b - a);",
    "number": 282,
    "options": [
      "8",
      "10",
      "0",
      "16",
      "2",
      "Значение переменной x не определено"
    ],
    "answers": [
      "8"
    ]
  },
  {
    "question": "Что из перечисленного не могут возвращать функции?",
    "number": 283,
    "options": [
      "массивы",
      "функции",
      "фундаментальные типы",
      "указатели",
      "все возращаемо"
    ],
    "answers": [
      "массивы"
    ]
  },
  {
    "question": "Допустима ли следующая конструкция: extern static int;",
    "number": 284,
    "options": [
      "Нет",
      "Да",
      "только при указании переменной",
      "да только в описании функции Директивы препроцессора"
    ],
    "answers": [
      "Нет"
    ]
  },
  {
    "question": "Чем отличается записи #include <lib.h> и #include lib.h?",
    "number": 285,
    "options": [
      "50%*#include <lib.h> подключает библиотеку из определенной реализацией директории.",
      "50%*#inlude lib.h подключает библиотеку из той же директории, в которой находится исходный код",
      "-100%#include <lib.h> подклбчает библиотеку из системной директории windows/include.",
      "-100%#inlude lib.h подключает библиотеку из директории, указанной компилятором.",
      "-100%никак"
    ],
    "answers": [
      "50%*#include <lib.h> подключает библиотеку из определенной реализацией директории.",
      "50%*#inlude lib.h подключает библиотеку из той же директории, в которой находится исходный код"
    ]
  },
  {
    "question": "Что выполняет конструкция #ifdef condition ... #endif",
    "number": 286,
    "options": [
      "Если имя condition определено, то данный блок будет откомилирован. В противном случае блок будет",
      "Если имя condition не определено, то данный блок будет откомилирован. В противном случае блок",
      "Если условие condition истинно, то данный блок будет откомилирован. В противном случае блок будет",
      "Если условие condition ложно, то данный блок будет откомилирован. В противном случае блок будет пропущен."
    ],
    "answers": [
      "Если имя condition определено, то данный блок будет откомилирован. В противном случае блок будет"
    ]
  },
  {
    "question": "В чем ошибка? #ifdef condition { ; } #endif",
    "number": 287,
    "options": [
      "Директивы препроцессора расположены в одной строке.",
      "Код в блоке условной компиляции записан в операторных скобках.",
      "Символ ; должен находиться за оператоными скобками.",
      "Идентификатор condition не определен.",
      "Условие #ifdef должно быть записано в скобках.",
      "Нет ошибок."
    ],
    "answers": [
      "Директивы препроцессора расположены в одной строке."
    ]
  },
  {
    "question": "В каких строках содержаться ошибки? #define 1 #define A 2 #define B(3) #define C(4) 4",
    "number": 288,
    "options": [
      "33.333%*1",
      "33.333%*3",
      "33.333%*4",
      "-100%2",
      "-100%Во всех строках"
    ],
    "answers": [
      "33.333%*1",
      "33.333%*3",
      "33.333%*4"
    ]
  },
  {
    "question": "#DEFINE external 02 #DEFINE static 04 Что означает следующая идиома: IF ((FLAGS & (external | static)) == 0) ... ?",
    "number": 289,
    "options": [
      "для проверки на включение битов external и static в FLAGS",
      "включает биты external и static в FLAGS",
      "выключает биты external и static в FLAGS"
    ],
    "answers": [
      "для проверки на включение битов external и static в FLAGS"
    ]
  },
  {
    "question": "struct { unsigned IS_KEYWORD : 1; unsigned IS_EXTERN : 1; unsigned IS_STATIC : 1; } FLAGS; Как включить биты IS_EXTERN и IS_STATIC?",
    "number": 290,
    "options": [
      "FLAGS.IS_EXTERN = FLAGS.IS_STATIC = 1;",
      "FLAGS.IS_EXTERN = FLAGS.IS_STATIC = 0;",
      "FLAGS |= external | static;"
    ],
    "answers": [
      "FLAGS.IS_EXTERN = FLAGS.IS_STATIC = 1;"
    ]
  },
  {
    "question": "В чем отличие конструкции #ifdef от #ifndef?",
    "number": 291,
    "options": [
      "50%#ifdef-блок компилируется, если установлено условие.",
      "50%#ifndef-блок компилируется, если условие не установлено.",
      "-100%#ifndef, от ifNewDefine - директива только C++ компилятора",
      "-100%#ifndef совмещает в себе конструкцию #define и #ifdef",
      "-100%Нет различий"
    ],
    "answers": [
      "50%#ifdef-блок компилируется, если установлено условие.",
      "50%#ifndef-блок компилируется, если условие не установлено."
    ]
  },
  {
    "question": "Что делает следующий код? #define A \\ int var = 3;",
    "number": 292,
    "options": [
      "Объявляет A как int var = 3;",
      "Объявляет A как \\ и объявляет переменную целого типа.",
      "Объявляет A как \\ int var = 3;",
      "Компиляция данного кода вызовет ошибку."
    ],
    "answers": [
      "Объявляет A как int var = 3;"
    ]
  },
  {
    "question": "Можно ли отменить действие #define?",
    "number": 293,
    "options": [
      "Да, с помощью конструкции #undef",
      "Да, с помощью конструкции  #undefine",
      "Да, с помощью повторного использования конструкции #define",
      "Нет."
    ],
    "answers": [
      "Да, с помощью конструкции #undef"
    ]
  },
  {
    "question": "Какая ошибка допущена при объявлении макроса? #define max(A,B) ( A > B ? A : B )",
    "number": 294,
    "options": [
      "Нет ошибки",
      "Имена A и B должны стоять в скобках",
      "Выражение должно быть указано в фигурных скобках, а не круглых.",
      "Имена A и B не объявлены"
    ],
    "answers": [
      "Нет ошибки"
    ]
  }
]